
# =========================================================================
# THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT MANUALLY.
#
# Generated by: generate_all_waveform_modules.py
# Contains pre-computed waveform functions for n_max from 0 to 10.
# Each function is optimized with CSE and JIT-compiled with Numba.
#
# Model Used: strain_asymptotic
# =========================================================================
import numpy as np
import numba
from scipy.special import expi 
# -------------------------------------------------------------------------
# Individual implementations for each n_max value
# -------------------------------------------------------------------------

@numba.jit(nopython=True, fastmath=True, cache=True)
def _waveform_n0(t, t0, tp, tau, Ap, Omega0, Omega_QNM, Phi_0):
    """Auto-generated, CSE-optimized, JIT-compiled waveform for n_max = 0."""
    x0 = 1/Omega0
    x1 = 1/tau
    x2 = t - tp
    x3 = np.tanh(x2/Omega_QNM)
    x4 = (1/2)*np.log(Omega0*x1)
    return -1j*Ap*x0*(tau*x0)**((1/2)*x3 - 1/2)*np.exp(-1j*((1/2)*Omega_QNM*(Omega0*expi(x4*(x3 - 1)) - tau*expi(x4*(x3 + 1))) - Phi_0))*(1/((1/2)*np.exp(x1*x2) + (1/2)*np.exp(-x1*x2)))


@numba.jit(nopython=True, fastmath=True, cache=True)
def _waveform_n1(t, t0, tp, tau, Ap, Omega0, Omega_QNM, Phi_0):
    """Auto-generated, CSE-optimized, JIT-compiled waveform for n_max = 1."""
    x0 = 1/tau
    x1 = t - tp
    x2 = x0*x1
    x3 = 1/Omega_QNM
    x4 = 1/Omega0
    x5 = tau*x4
    x6 = np.tanh(x1*x3)
    x7 = x4*x5**((1/2)*x6 - 1/2)
    x8 = (1/2)*np.log(Omega0*x0)
    return -Ap*x7*((1/2)*x7*(2*x0*np.tanh(x2) + x3*(x6**2 - 1)*np.log(x5)) + 1j)*np.exp(-1j*((1/2)*Omega_QNM*(Omega0*expi(x8*(x6 - 1)) - tau*expi(x8*(x6 + 1))) - Phi_0))*(1/((1/2)*np.exp(x2) + (1/2)*np.exp(-x2)))


@numba.jit(nopython=True, fastmath=True, cache=True)
def _waveform_n2(t, t0, tp, tau, Ap, Omega0, Omega_QNM, Phi_0):
    """Auto-generated, CSE-optimized, JIT-compiled waveform for n_max = 2."""
    x0 = 1/tau
    x1 = t - tp
    x2 = x0*x1
    x3 = np.tanh(x2)
    x4 = x0*x3
    x5 = 1/Omega_QNM
    x6 = np.tanh(x1*x5)
    x7 = x6**2 - 1
    x8 = 1/Omega0
    x9 = tau*x8
    x10 = np.log(x9)
    x11 = x10*x7
    x12 = x11*x5
    x13 = x8*x9**((1/2)*x6 - 1/2)
    x14 = x6 - 1
    x15 = x3**2
    x16 = 4/tau**2
    x17 = Omega_QNM**(-2)
    x18 = (1/2)*np.log(Omega0*x0)
    return -Ap*x13*((1/2)*x13*(x12 + 2*x4) + 1j - 1/4*1j*x9**x14*(x10**2*x17*x7**2 + 4*x11*x17*x6 + 4*x12*x4 + x15*x16 + x16*(x15 - 1))/Omega0**2)*np.exp(-1j*((1/2)*Omega_QNM*(Omega0*expi(x14*x18) - tau*expi(x18*(x6 + 1))) - Phi_0))*(1/((1/2)*np.exp(x2) + (1/2)*np.exp(-x2)))


@numba.jit(nopython=True, fastmath=True, cache=True)
def _waveform_n3(t, t0, tp, tau, Ap, Omega0, Omega_QNM, Phi_0):
    """Auto-generated, CSE-optimized, JIT-compiled waveform for n_max = 3."""
    x0 = 1/tau
    x1 = t - tp
    x2 = x0*x1
    x3 = np.tanh(x2)
    x4 = x0*x3
    x5 = 1/Omega_QNM
    x6 = np.tanh(x1*x5)
    x7 = x6**2
    x8 = x7 - 1
    x9 = 1/Omega0
    x10 = tau*x9
    x11 = np.log(x10)
    x12 = x11*x8
    x13 = x12*x5
    x14 = x10**((1/2)*x6 - 1/2)*x9
    x15 = x6 - 1
    x16 = x3**2
    x17 = tau**(-2)
    x18 = 4*x17
    x19 = x16 - 1
    x20 = Omega_QNM**(-2)
    x21 = x11**2
    x22 = x20*x21
    x23 = x20*x6
    x24 = tau**(-3)
    x25 = Omega_QNM**(-3)
    x26 = -x8
    x27 = x26**2
    x28 = x25*x27
    x29 = -x19
    x30 = x11*x26
    x31 = 12*x17*x30*x5
    x32 = (1/2)*np.log(Omega0*x0)
    return -Ap*x14*((1/2)*x14*(x13 + 2*x4) + 1j - 1/4*1j*x10**x15*(4*x12*x23 + 4*x13*x4 + x16*x18 + x18*x19 + x22*x8**2)/Omega0**2 + (1/8)*x10**((3/2)*x6 - 3/2)*(x11**3*x25*x26**3 - 8*x11*x28 + x16*x31 - 12*x21*x28*x6 - 6*x22*x27*x4 + 24*x23*x30*x4 + 40*x24*x29*x3 - 8*x24*x3**3 + 16*x25*x30*x7 - x29*x31)/Omega0**3)*np.exp(-1j*((1/2)*Omega_QNM*(Omega0*expi(x15*x32) - tau*expi(x32*(x6 + 1))) - Phi_0))*(1/((1/2)*np.exp(x2) + (1/2)*np.exp(-x2)))


@numba.jit(nopython=True, fastmath=True, cache=True)
def _waveform_n4(t, t0, tp, tau, Ap, Omega0, Omega_QNM, Phi_0):
    """Auto-generated, CSE-optimized, JIT-compiled waveform for n_max = 4."""
    x0 = 1/tau
    x1 = t - tp
    x2 = x0*x1
    x3 = np.tanh(x2)
    x4 = x0*x3
    x5 = 1/Omega_QNM
    x6 = np.tanh(x1*x5)
    x7 = x6**2
    x8 = x7 - 1
    x9 = 1/Omega0
    x10 = tau*x9
    x11 = np.log(x10)
    x12 = x11*x8
    x13 = x12*x5
    x14 = x10**((1/2)*x6 - 1/2)*x9
    x15 = x6 - 1
    x16 = x3**2
    x17 = tau**(-2)
    x18 = 4*x17
    x19 = x16 - 1
    x20 = Omega_QNM**(-2)
    x21 = x11**2
    x22 = x20*x21
    x23 = x20*x6
    x24 = tau**(-3)
    x25 = x24*x3**3
    x26 = Omega_QNM**(-3)
    x27 = -x8
    x28 = x27**2
    x29 = x26*x28
    x30 = x11*x29
    x31 = x27**3
    x32 = x11**3*x31
    x33 = x26*x32
    x34 = -x19
    x35 = x24*x3*x34
    x36 = x11*x27
    x37 = x26*x36*x7
    x38 = x21*x29*x6
    x39 = x36*x5
    x40 = 12*x39
    x41 = x16*x17
    x42 = x22*x28
    x43 = x17*x34
    x44 = x23*x36
    x45 = tau**(-4)
    x46 = Omega_QNM**(-4)
    x47 = x21*x46
    x48 = x46*x6
    x49 = 24*x42
    x50 = 96*x44
    x51 = (1/2)*np.log(Omega0*x0)
    return -Ap*x14*((1/2)*x14*(x13 + 2*x4) + 1j - 1/4*1j*x10**x15*(4*x12*x23 + 4*x13*x4 + x16*x18 + x18*x19 + x22*x8**2)/Omega0**2 + (1/8)*x10**((3/2)*x6 - 3/2)*(-8*x25 - 8*x30 + x33 + 40*x35 + 16*x37 - 12*x38 - 6*x4*x42 + 24*x4*x44 + x40*x41 - x40*x43)/Omega0**3 + (1/16)*1j*x10**(2*x6 - 2)*(x11**4*x27**4*x46 + 128*x11*x28*x48 - 288*x16*x34*x45 - 32*x25*x39 + 112*x28*x47*x7 + 16*x3**4*x45 + 64*x30*x4 - 32*x31*x47 - 24*x32*x48 - 8*x33*x4 + 80*x34**2*x45 + 160*x35*x39 - 64*x36*x46*x6**3 - 128*x37*x4 + 96*x38*x4 + x41*x49 - x41*x50 - x43*x49 + x43*x50)/Omega0**4)*np.exp(-1j*((1/2)*Omega_QNM*(Omega0*expi(x15*x51) - tau*expi(x51*(x6 + 1))) - Phi_0))*(1/((1/2)*np.exp(x2) + (1/2)*np.exp(-x2)))


@numba.jit(nopython=True, fastmath=True, cache=True)
def _waveform_n5(t, t0, tp, tau, Ap, Omega0, Omega_QNM, Phi_0):
    """Auto-generated, CSE-optimized, JIT-compiled waveform for n_max = 5."""
    x0 = 1/tau
    x1 = t - tp
    x2 = x0*x1
    x3 = np.tanh(x2)
    x4 = x0*x3
    x5 = 1/Omega_QNM
    x6 = np.tanh(x1*x5)
    x7 = x6**2
    x8 = x7 - 1
    x9 = 1/Omega0
    x10 = tau*x9
    x11 = np.log(x10)
    x12 = x11*x8
    x13 = x12*x5
    x14 = x10**((1/2)*x6 - 1/2)*x9
    x15 = x6 - 1
    x16 = x3**2
    x17 = tau**(-2)
    x18 = 4*x17
    x19 = x16 - 1
    x20 = Omega_QNM**(-2)
    x21 = x11**2
    x22 = x20*x21
    x23 = x20*x6
    x24 = tau**(-3)
    x25 = x3**3
    x26 = x24*x25
    x27 = Omega_QNM**(-3)
    x28 = -x8
    x29 = x28**2
    x30 = x27*x29
    x31 = x11*x30
    x32 = x28**3
    x33 = x11**3
    x34 = x32*x33
    x35 = x27*x34
    x36 = -x19
    x37 = 40*x36
    x38 = x24*x3
    x39 = x11*x28
    x40 = x27*x39*x7
    x41 = x21*x30*x6
    x42 = x16*x17
    x43 = x39*x5
    x44 = 12*x43
    x45 = x22*x29
    x46 = x17*x36
    x47 = x23*x39
    x48 = tau**(-4)
    x49 = x3**4*x48
    x50 = x36**2
    x51 = x48*x50
    x52 = Omega_QNM**(-4)
    x53 = x28**4
    x54 = x11**4*x53
    x55 = x52*x54
    x56 = x21*x32
    x57 = x52*x56
    x58 = x16*x36*x48
    x59 = x6**3
    x60 = x39*x52*x59
    x61 = x52*x6
    x62 = x11*x29*x61
    x63 = x34*x61
    x64 = x29*x7
    x65 = x21*x52*x64
    x66 = 24*x45
    x67 = 96*x47
    x68 = x36*x38
    x69 = tau**(-5)
    x70 = Omega_QNM**(-5)
    x71 = x11*x70
    x72 = 256*x71
    x73 = 960*x70
    x74 = 320*x31
    x75 = 640*x40
    x76 = 480*x41
    x77 = (1/2)*np.log(Omega0*x0)
    return -Ap*x14*((1/2)*x14*(x13 + 2*x4) + 1j - 1/4*1j*x10**x15*(4*x12*x23 + 4*x13*x4 + x16*x18 + x18*x19 + x22*x8**2)/Omega0**2 + (1/8)*x10**((3/2)*x6 - 3/2)*(-8*x26 - 8*x31 + x35 + x37*x38 - 6*x4*x45 + 24*x4*x47 + 16*x40 - 12*x41 + x42*x44 - x44*x46)/Omega0**3 + (1/16)*1j*x10**(2*x6 - 2)*(-32*x26*x43 + 64*x31*x4 - 8*x35*x4 - 128*x4*x40 + 96*x4*x41 + x42*x66 - x42*x67 + 160*x43*x68 - x46*x66 + x46*x67 + 16*x49 + 80*x51 + x55 - 32*x57 - 288*x58 - 64*x60 + 128*x62 - 24*x63 + 112*x65)/Omega0**4 - 1/32*x10**((5/2)*x6 - 5/2)*(x11**5*x28**5*x70 - x17*x35*x37 - x21*x29*x59*x73 + 1856*x25*x36*x69 - 80*x26*x45 + 320*x26*x47 + x28*x6**4*x72 - 32*x3**5*x69 - 1952*x3*x50*x69 + x32*x72 - 80*x33*x53*x70 + 400*x34*x7*x70 + 40*x35*x42 - 10*x4*x55 + 320*x4*x57 + 640*x4*x60 - 1280*x4*x62 + 240*x4*x63 - 1120*x4*x65 - x42*x74 + x42*x75 - x42*x76 + 80*x43*x49 + 400*x43*x51 - 1440*x43*x58 + 400*x45*x68 + x46*x74 - x46*x75 + x46*x76 - 1600*x47*x68 - 40*x54*x6*x70 + x56*x6*x73 - 1408*x64*x71)/Omega0**5)*np.exp(-1j*((1/2)*Omega_QNM*(Omega0*expi(x15*x77) - tau*expi(x77*(x6 + 1))) - Phi_0))*(1/((1/2)*np.exp(x2) + (1/2)*np.exp(-x2)))


@numba.jit(nopython=True, fastmath=True, cache=True)
def _waveform_n6(t, t0, tp, tau, Ap, Omega0, Omega_QNM, Phi_0):
    """Auto-generated, CSE-optimized, JIT-compiled waveform for n_max = 6."""
    x0 = 1/tau
    x1 = t - tp
    x2 = x0*x1
    x3 = np.tanh(x2)
    x4 = x0*x3
    x5 = 1/Omega_QNM
    x6 = np.tanh(x1*x5)
    x7 = x6**2
    x8 = x7 - 1
    x9 = 1/Omega0
    x10 = tau*x9
    x11 = np.log(x10)
    x12 = x11*x8
    x13 = x12*x5
    x14 = x10**((1/2)*x6 - 1/2)*x9
    x15 = x6 - 1
    x16 = x3**2
    x17 = tau**(-2)
    x18 = 4*x17
    x19 = x16 - 1
    x20 = Omega_QNM**(-2)
    x21 = x8**2
    x22 = x11**2
    x23 = x21*x22
    x24 = x20*x23
    x25 = x20*x6
    x26 = x12*x25
    x27 = tau**(-3)
    x28 = x3**3
    x29 = x27*x28
    x30 = Omega_QNM**(-3)
    x31 = -x8
    x32 = x31**2
    x33 = x30*x32
    x34 = x11*x33
    x35 = x31**3
    x36 = x11**3
    x37 = x35*x36
    x38 = x30*x37
    x39 = -x19
    x40 = 40*x39
    x41 = x27*x3
    x42 = x11*x31
    x43 = x30*x7
    x44 = x42*x43
    x45 = x22*x33*x6
    x46 = x16*x17
    x47 = x42*x5
    x48 = 12*x47
    x49 = x22*x32
    x50 = x20*x49
    x51 = x17*x39
    x52 = x25*x42
    x53 = tau**(-4)
    x54 = x3**4
    x55 = x53*x54
    x56 = x39**2
    x57 = x53*x56
    x58 = Omega_QNM**(-4)
    x59 = x31**4
    x60 = x11**4
    x61 = x59*x60
    x62 = x58*x61
    x63 = x22*x35
    x64 = x58*x63
    x65 = x16*x53
    x66 = x39*x65
    x67 = x6**3
    x68 = x58*x67
    x69 = x42*x68
    x70 = x11*x6
    x71 = x58*x70
    x72 = x32*x71
    x73 = x37*x58*x6
    x74 = x32*x7
    x75 = x22*x58
    x76 = x74*x75
    x77 = 24*x50
    x78 = 96*x52
    x79 = x39*x41
    x80 = tau**(-5)
    x81 = x3**5*x80
    x82 = Omega_QNM**(-5)
    x83 = x11*x82
    x84 = 256*x83
    x85 = x11**5
    x86 = x82*x85
    x87 = x36*x82
    x88 = x28*x80
    x89 = x3*x80
    x90 = x6**4
    x91 = 960*x82
    x92 = x6*x82
    x93 = 320*x34
    x94 = 640*x44
    x95 = 480*x45
    x96 = tau**(-6)
    x97 = Omega_QNM**(-6)
    x98 = x8**4
    x99 = x97*x98
    x100 = x8**5
    x101 = x100*x97
    x102 = x19**2
    x103 = x8**3
    x104 = x103*x97
    x105 = x11*x21
    x106 = x36*x6
    x107 = 3072*x4
    x108 = x4*x87
    x109 = x29*x30
    x110 = 1920*x103*x75
    x111 = x46*x58
    x112 = x60*x98
    x113 = 60*x112
    x114 = x103*x36
    x115 = x17*x19
    x116 = x115*x58
    x117 = x102*x53
    x118 = x4*x92
    x119 = 3840*x12*x68
    x120 = 7680*x21*x71
    x121 = x12*x43
    x122 = 1440*x103*x106
    x123 = x19*x41
    x124 = x123*x30
    x125 = x23*x6
    x126 = 6720*x23*x7
    x127 = x19*x65
    x128 = (1/2)*np.log(Omega0*x0)
    return -Ap*x14*((1/2)*x14*(x13 + 2*x4) + 1j - 1/4*1j*x10**x15*(4*x13*x4 + x16*x18 + x18*x19 + x24 + 4*x26)/Omega0**2 + (1/8)*x10**((3/2)*x6 - 3/2)*(-8*x29 - 8*x34 + x38 - 6*x4*x50 + 24*x4*x52 + x40*x41 + 16*x44 - 12*x45 + x46*x48 - x48*x51)/Omega0**3 + (1/16)*1j*x10**(2*x6 - 2)*(-32*x29*x47 + 64*x34*x4 - 8*x38*x4 - 128*x4*x44 + 96*x4*x45 + x46*x77 - x46*x78 + 160*x47*x79 - x51*x77 + x51*x78 + 16*x55 + 80*x57 + x62 - 32*x64 - 288*x66 - 64*x69 + 128*x72 - 24*x73 + 112*x76)/Omega0**4 - 1/32*x10**((5/2)*x6 - 5/2)*(-x17*x38*x40 - 80*x29*x50 + 320*x29*x52 + x31**5*x86 + x31*x84*x90 + x35*x84 + 400*x37*x7*x82 + 40*x38*x46 + 1856*x39*x88 - 10*x4*x62 + 320*x4*x64 + 640*x4*x69 - 1280*x4*x72 + 240*x4*x73 - 1120*x4*x76 - x46*x93 + x46*x94 - x46*x95 + 80*x47*x55 + 400*x47*x57 - 1440*x47*x66 - x49*x67*x91 + 400*x50*x79 + x51*x93 - x51*x94 + x51*x95 - 1600*x52*x79 - 1952*x56*x89 - 80*x59*x87 + x6*x63*x91 - 40*x61*x92 - 1408*x74*x83 - 32*x81)/Omega0**5 - 1/64*1j*x10**(3*x6 - 3)*(12*x100*x4*x86 + 60*x101*x6*x85 + 160*x101*x60 + 11712*x102*x13*x89 + 30656*x102*x16*x96 + x103*x107*x83 + 4800*x103*x108*x7 + 11520*x103*x118*x22 + 18688*x104*x22*x7 + 5760*x104*x36*x67 + 8704*x104*x70 + 1280*x105*x109 + 6400*x105*x124 + 13312*x105*x67*x97 + 3840*x106*x99 + x107*x12*x82*x90 + 960*x108*x98 + 160*x109*x114 + 1920*x109*x125 + x11**6*x8**6*x97 + x110*x115 + x110*x46 + x111*x113 + x111*x122 + x111*x126 + 480*x112*x118 + x113*x116 + 800*x114*x124 + x115*x119 + x115*x120 + x116*x122 + x116*x126 + 1200*x117*x24 + 4800*x117*x26 + x119*x46 + 1024*x12*x6**5*x97 + x120*x46 + 12800*x121*x123 + 2560*x121*x29 + 9600*x124*x125 + 4320*x127*x24 + 17280*x127*x26 + 11136*x13*x19*x88 + 192*x13*x81 + 3904*x19**3*x96 + 11456*x19*x54*x96 + 16896*x21*x4*x7*x83 + 2176*x22*x99 + 11520*x23*x4*x67*x82 + 7936*x23*x90*x97 + 240*x24*x55 + 960*x26*x55 + 64*x3**6*x96 + 1040*x60*x7*x99)/Omega0**6)*np.exp(-1j*((1/2)*Omega_QNM*(Omega0*expi(x128*x15) - tau*expi(x128*(x6 + 1))) - Phi_0))*(1/((1/2)*np.exp(x2) + (1/2)*np.exp(-x2)))


@numba.jit(nopython=True, fastmath=True, cache=True)
def _waveform_n7(t, t0, tp, tau, Ap, Omega0, Omega_QNM, Phi_0):
    """Auto-generated, CSE-optimized, JIT-compiled waveform for n_max = 7."""
    x0 = 1/tau
    x1 = t - tp
    x2 = x0*x1
    x3 = np.tanh(x2)
    x4 = x0*x3
    x5 = 1/Omega_QNM
    x6 = np.tanh(x1*x5)
    x7 = x6**2
    x8 = x7 - 1
    x9 = 1/Omega0
    x10 = tau*x9
    x11 = np.log(x10)
    x12 = x11*x8
    x13 = x12*x5
    x14 = x10**((1/2)*x6 - 1/2)*x9
    x15 = x6 - 1
    x16 = x3**2
    x17 = tau**(-2)
    x18 = 4*x17
    x19 = x16 - 1
    x20 = Omega_QNM**(-2)
    x21 = x8**2
    x22 = x11**2
    x23 = x21*x22
    x24 = x20*x23
    x25 = x20*x6
    x26 = x12*x25
    x27 = tau**(-3)
    x28 = x3**3
    x29 = x27*x28
    x30 = Omega_QNM**(-3)
    x31 = -x8
    x32 = x31**2
    x33 = x30*x32
    x34 = x11*x33
    x35 = x31**3
    x36 = x11**3
    x37 = x35*x36
    x38 = x30*x37
    x39 = -x19
    x40 = 40*x39
    x41 = x27*x3
    x42 = x11*x31
    x43 = x30*x7
    x44 = x42*x43
    x45 = x22*x6
    x46 = x33*x45
    x47 = x16*x17
    x48 = x42*x5
    x49 = 12*x48
    x50 = x22*x32
    x51 = x20*x50
    x52 = x17*x39
    x53 = x25*x42
    x54 = tau**(-4)
    x55 = x3**4
    x56 = x54*x55
    x57 = x39**2
    x58 = x54*x57
    x59 = Omega_QNM**(-4)
    x60 = x31**4
    x61 = x11**4
    x62 = x60*x61
    x63 = x59*x62
    x64 = x22*x35
    x65 = x59*x64
    x66 = x16*x54
    x67 = x39*x66
    x68 = x6**3
    x69 = x59*x68
    x70 = x42*x69
    x71 = x11*x32
    x72 = x59*x6
    x73 = x71*x72
    x74 = x37*x72
    x75 = x32*x7
    x76 = x22*x59
    x77 = x75*x76
    x78 = 24*x51
    x79 = 96*x53
    x80 = x39*x41
    x81 = tau**(-5)
    x82 = x3**5
    x83 = x81*x82
    x84 = Omega_QNM**(-5)
    x85 = x11*x84
    x86 = 256*x85
    x87 = x31**5
    x88 = x11**5
    x89 = x87*x88
    x90 = x84*x89
    x91 = x36*x60
    x92 = x84*x91
    x93 = x28*x81
    x94 = x39*x93
    x95 = x3*x81
    x96 = x57*x95
    x97 = x6**4
    x98 = x31*x97
    x99 = x75*x85
    x100 = 960*x84
    x101 = x6*x84
    x102 = x101*x62
    x103 = x50*x68
    x104 = x7*x84
    x105 = x104*x37
    x106 = 320*x34
    x107 = 640*x44
    x108 = 480*x46
    x109 = tau**(-6)
    x110 = x109*x3**6
    x111 = Omega_QNM**(-6)
    x112 = x11**6
    x113 = x111*x112
    x114 = x8**4
    x115 = x111*x114
    x116 = x8**5
    x117 = x111*x116
    x118 = x109*x55
    x119 = x19**2
    x120 = x109*x16
    x121 = x6**5
    x122 = x111*x121
    x123 = x8**3
    x124 = x111*x123
    x125 = x11*x6
    x126 = x11*x21
    x127 = x111*x68
    x128 = x36*x6
    x129 = x123*x4
    x130 = x111*x97
    x131 = x4*x84
    x132 = x29*x30
    x133 = 1920*x123*x76
    x134 = x47*x59
    x135 = x114*x61
    x136 = 60*x135
    x137 = x123*x36
    x138 = x17*x19
    x139 = x138*x59
    x140 = x119*x54
    x141 = 3840*x12*x69
    x142 = 7680*x125*x21
    x143 = x12*x43
    x144 = 1440*x123*x128
    x145 = x19*x41
    x146 = x145*x30
    x147 = x23*x6
    x148 = 6720*x23*x7
    x149 = x19*x66
    x150 = tau**(-7)
    x151 = Omega_QNM**(-7)
    x152 = x151*x60
    x153 = x151*x87
    x154 = x31**6
    x155 = x151*x154
    x156 = x39**3
    x157 = x151*x97
    x158 = x151*x7
    x159 = x11*x35
    x160 = x151*x68
    x161 = x111*x4
    x162 = 21504*x85
    x163 = x162*x35
    x164 = 6720*x92
    x165 = 84*x90
    x166 = x161*x6
    x167 = x127*x4
    x168 = x162*x98
    x169 = x161*x7
    x170 = 118272*x99
    x171 = 80640*x47
    x172 = x101*x64
    x173 = 3360*x102
    x174 = x103*x84
    x175 = 33600*x105
    x176 = 80640*x52
    x177 = (1/2)*np.log(Omega0*x0)
    return -Ap*x14*((1/2)*x14*(x13 + 2*x4) + 1j - 1/4*1j*x10**x15*(4*x13*x4 + x16*x18 + x18*x19 + x24 + 4*x26)/Omega0**2 + (1/8)*x10**((3/2)*x6 - 3/2)*(-8*x29 - 8*x34 + x38 - 6*x4*x51 + 24*x4*x53 + x40*x41 + 16*x44 - 12*x46 + x47*x49 - x49*x52)/Omega0**3 + (1/16)*1j*x10**(2*x6 - 2)*(-32*x29*x48 + 64*x34*x4 - 8*x38*x4 - 128*x4*x44 + 96*x4*x46 + x47*x78 - x47*x79 + 160*x48*x80 - x52*x78 + x52*x79 + 16*x56 + 80*x58 + x63 - 32*x65 - 288*x67 - 64*x70 + 128*x73 - 24*x74 + 112*x77)/Omega0**4 - 1/32*x10**((5/2)*x6 - 5/2)*(-x100*x103 + x100*x6*x64 - 40*x102 + 400*x105 - x106*x47 + x106*x52 + x107*x47 - x107*x52 - x108*x47 + x108*x52 - x17*x38*x40 - 80*x29*x51 + 320*x29*x53 + x35*x86 + 40*x38*x47 - 10*x4*x63 + 320*x4*x65 + 640*x4*x70 - 1280*x4*x73 + 240*x4*x74 - 1120*x4*x77 + 80*x48*x56 + 400*x48*x58 - 1440*x48*x67 + 400*x51*x80 - 1600*x53*x80 - 32*x83 + x86*x98 + x90 - 80*x92 + 1856*x94 - 1952*x96 - 1408*x99)/Omega0**5 - 1/64*1j*x10**(3*x6 - 3)*(x100*x114*x36*x4 + 11520*x101*x129*x22 + 480*x101*x135*x4 + 4800*x104*x137*x4 + 3904*x109*x19**3 + 64*x110 + x113*x8**6 + 3840*x115*x128 + 2176*x115*x22 + 1040*x115*x61*x7 + 12*x116*x131*x88 + 60*x117*x6*x88 + 160*x117*x61 + 11456*x118*x19 + 30656*x119*x120 + 11712*x119*x13*x95 + 1024*x12*x122 + 3072*x12*x131*x97 + 8704*x124*x125 + 18688*x124*x22*x7 + 5760*x124*x36*x68 + 13312*x126*x127 + 1280*x126*x132 + 6400*x126*x146 + 3072*x129*x85 + 11136*x13*x19*x93 + 192*x13*x83 + 7936*x130*x23 + 11520*x131*x23*x68 + 160*x132*x137 + 1920*x132*x147 + x133*x138 + x133*x47 + x134*x136 + x134*x142 + x134*x144 + x134*x148 + x136*x139 + 800*x137*x146 + x138*x141 + x139*x142 + x139*x144 + x139*x148 + 1200*x140*x24 + 4800*x140*x26 + x141*x47 + 12800*x143*x145 + 2560*x143*x29 + 9600*x146*x147 + 4320*x149*x24 + 17280*x149*x26 + 16896*x21*x4*x7*x85 + 240*x24*x56 + 960*x26*x56)/Omega0**6 + (1/128)*x10**((7/2)*x6 - 7/2)*(-27328*x109*x156*x48 + x11**7*x151*x31**7 - 17408*x11*x152 + 448*x110*x48 - 84*x112*x155*x6 - 14*x113*x154*x4 - 80192*x118*x39*x48 + 214592*x120*x48*x57 - 64512*x121*x151*x50 + 14336*x122*x4*x42 - 111104*x130*x4*x50 + 177280*x150*x156*x3 - 398208*x150*x28*x57 - 128*x150*x3**7 + 69504*x150*x39*x82 + 4096*x151*x42*x6**6 - 118272*x152*x45 + 9856*x153*x36 + 11200*x153*x6*x61 - 280*x155*x88 + 77056*x157*x37 - 116736*x157*x71 + 184320*x158*x159 + 2240*x158*x89 - 114688*x158*x91 + 121856*x159*x166 - 22400*x160*x62 + 301056*x160*x64 - 30464*x161*x22*x60 + 2240*x161*x61*x87 + x163*x47 - x163*x52 - x164*x47 + x164*x52 + x165*x47 - x165*x52 + 840*x166*x89 - 53760*x166*x91 + 80640*x167*x37 - 186368*x167*x71 + x168*x47 - x168*x52 - 14560*x169*x62 + 261632*x169*x64 - x170*x47 + x170*x52 + x171*x172 - x171*x174 - x172*x176 - x173*x47 + x173*x52 + x174*x176 + x175*x47 - x175*x52 - 280*x29*x63 + 8960*x29*x65 + 17920*x29*x70 - 35840*x29*x73 + 6720*x29*x74 - 31360*x29*x77 - 4480*x34*x56 - 22400*x34*x58 + 80640*x34*x67 + 560*x38*x56 + 2800*x38*x58 - 10080*x38*x67 + 8960*x44*x56 + 44800*x44*x58 - 161280*x44*x67 - 6720*x46*x56 - 33600*x46*x58 + 120960*x46*x67 - 672*x51*x83 + 38976*x51*x94 - 40992*x51*x96 + 2688*x53*x83 - 155904*x53*x94 + 163968*x53*x96 + 1400*x63*x80 - 44800*x65*x80 - 89600*x70*x80 + 179200*x73*x80 - 33600*x74*x80 + 156800*x77*x80)/Omega0**7)*np.exp(-1j*((1/2)*Omega_QNM*(Omega0*expi(x15*x177) - tau*expi(x177*(x6 + 1))) - Phi_0))*(1/((1/2)*np.exp(x2) + (1/2)*np.exp(-x2)))


@numba.jit(nopython=True, fastmath=True, cache=True)
def _waveform_n8(t, t0, tp, tau, Ap, Omega0, Omega_QNM, Phi_0):
    """Auto-generated, CSE-optimized, JIT-compiled waveform for n_max = 8."""
    x0 = 1/tau
    x1 = t - tp
    x2 = x0*x1
    x3 = np.tanh(x2)
    x4 = x0*x3
    x5 = 1/Omega_QNM
    x6 = np.tanh(x1*x5)
    x7 = x6**2
    x8 = x7 - 1
    x9 = 1/Omega0
    x10 = tau*x9
    x11 = np.log(x10)
    x12 = x11*x8
    x13 = x12*x5
    x14 = x10**((1/2)*x6 - 1/2)*x9
    x15 = x6 - 1
    x16 = x3**2
    x17 = tau**(-2)
    x18 = 4*x17
    x19 = x16 - 1
    x20 = Omega_QNM**(-2)
    x21 = x8**2
    x22 = x11**2
    x23 = x21*x22
    x24 = x20*x23
    x25 = 4*x6
    x26 = x12*x20
    x27 = tau**(-3)
    x28 = x3**3
    x29 = x27*x28
    x30 = Omega_QNM**(-3)
    x31 = -x8
    x32 = x31**2
    x33 = x30*x32
    x34 = x11*x33
    x35 = x31**3
    x36 = x11**3
    x37 = x35*x36
    x38 = x30*x37
    x39 = -x19
    x40 = 40*x39
    x41 = x27*x3
    x42 = x11*x31
    x43 = x30*x7
    x44 = x42*x43
    x45 = x22*x6
    x46 = x33*x45
    x47 = x16*x17
    x48 = x42*x5
    x49 = 12*x48
    x50 = x22*x32
    x51 = x20*x50
    x52 = x17*x39
    x53 = x20*x42*x6
    x54 = tau**(-4)
    x55 = x3**4
    x56 = x54*x55
    x57 = x39**2
    x58 = x54*x57
    x59 = Omega_QNM**(-4)
    x60 = x31**4
    x61 = x11**4
    x62 = x60*x61
    x63 = x59*x62
    x64 = x22*x35
    x65 = x59*x64
    x66 = x16*x54
    x67 = x39*x66
    x68 = x6**3
    x69 = x59*x68
    x70 = x42*x69
    x71 = x11*x32
    x72 = x59*x6
    x73 = x71*x72
    x74 = x37*x72
    x75 = x32*x7
    x76 = x22*x59
    x77 = x75*x76
    x78 = 24*x51
    x79 = 96*x53
    x80 = x39*x41
    x81 = tau**(-5)
    x82 = x3**5
    x83 = x81*x82
    x84 = Omega_QNM**(-5)
    x85 = x11*x84
    x86 = 256*x85
    x87 = x31**5
    x88 = x11**5
    x89 = x87*x88
    x90 = x84*x89
    x91 = x36*x60
    x92 = x84*x91
    x93 = x28*x81
    x94 = x39*x93
    x95 = x3*x81
    x96 = x57*x95
    x97 = x6**4
    x98 = x31*x97
    x99 = x75*x85
    x100 = 960*x84
    x101 = x6*x84
    x102 = x101*x62
    x103 = x50*x68
    x104 = x7*x84
    x105 = x104*x37
    x106 = 320*x34
    x107 = 640*x44
    x108 = 480*x46
    x109 = tau**(-6)
    x110 = x3**6
    x111 = x109*x110
    x112 = Omega_QNM**(-6)
    x113 = x11**6
    x114 = x112*x113
    x115 = x8**4
    x116 = x112*x115
    x117 = x8**5
    x118 = x112*x117
    x119 = x109*x55
    x120 = x19**2
    x121 = x109*x16
    x122 = x6**5
    x123 = x112*x122
    x124 = x8**3
    x125 = x112*x124
    x126 = x11*x6
    x127 = x11*x21
    x128 = x112*x68
    x129 = x36*x6
    x130 = x6*x88
    x131 = x124*x4
    x132 = x112*x97
    x133 = x22*x7
    x134 = x61*x7
    x135 = x4*x84
    x136 = x29*x30
    x137 = 1920*x124*x76
    x138 = x47*x59
    x139 = x115*x61
    x140 = 60*x139
    x141 = x124*x36
    x142 = x17*x19
    x143 = x142*x59
    x144 = x120*x54
    x145 = x26*x6
    x146 = 3840*x12*x69
    x147 = 7680*x126*x21
    x148 = x12*x43
    x149 = 1440*x124*x129
    x150 = x19*x41
    x151 = x150*x30
    x152 = x23*x6
    x153 = 6720*x23*x7
    x154 = x19*x66
    x155 = tau**(-7)
    x156 = x155*x3**7
    x157 = Omega_QNM**(-7)
    x158 = x157*x60
    x159 = x11*x158
    x160 = x31**7
    x161 = x11**7*x160
    x162 = x157*x161
    x163 = x157*x87
    x164 = x163*x36
    x165 = x31**6
    x166 = x157*x165
    x167 = x166*x88
    x168 = x155*x39*x82
    x169 = x39**3
    x170 = x155*x169*x3
    x171 = x155*x28*x57
    x172 = x6**6
    x173 = x157*x172*x42
    x174 = x157*x97
    x175 = x174*x71
    x176 = x157*x7
    x177 = x11*x35
    x178 = x176*x177
    x179 = x158*x45
    x180 = x163*x6*x61
    x181 = x113*x166*x6
    x182 = x122*x157*x50
    x183 = x157*x68
    x184 = x183*x64
    x185 = x174*x37
    x186 = x176*x91
    x187 = x183*x62
    x188 = x176*x89
    x189 = x112*x4
    x190 = x22*x60
    x191 = x61*x87
    x192 = x114*x165
    x193 = x35*x85
    x194 = 21504*x193
    x195 = 6720*x92
    x196 = 84*x90
    x197 = x109*x169
    x198 = x123*x42
    x199 = x189*x6
    x200 = x128*x4
    x201 = x85*x98
    x202 = 21504*x201
    x203 = 17920*x29
    x204 = 35840*x29
    x205 = x132*x50
    x206 = x189*x7
    x207 = 118272*x99
    x208 = 80640*x47
    x209 = x101*x64
    x210 = 3360*x102
    x211 = x103*x84
    x212 = 33600*x105
    x213 = x119*x39
    x214 = 80640*x52
    x215 = x121*x57
    x216 = 89600*x80
    x217 = 179200*x80
    x218 = tau**(-8)
    x219 = Omega_QNM**(-8)
    x220 = x219*x87
    x221 = x165*x219
    x222 = x113*x219
    x223 = x219*x60
    x224 = x122*x219
    x225 = x219*x68
    x226 = x219*x97
    x227 = 114688*x29
    x228 = 243712*x190
    x229 = x112*x47
    x230 = 17920*x191
    x231 = 112*x192
    x232 = x112*x52
    x233 = 114688*x198
    x234 = x229*x6
    x235 = 974848*x177
    x236 = 1490944*x71
    x237 = x128*x47
    x238 = 430080*x91
    x239 = 6720*x89
    x240 = 430080*x29
    x241 = 888832*x205
    x242 = x232*x6
    x243 = x229*x7
    x244 = 2093056*x64
    x245 = 645120*x37
    x246 = 116480*x62
    x247 = 573440*x80
    x248 = x128*x52
    x249 = x232*x7
    x250 = 2150400*x80
    x251 = (1/2)*np.log(Omega0*x0)
    return -Ap*x14*((1/2)*x14*(x13 + 2*x4) + 1j - 1/4*1j*x10**x15*(4*x13*x4 + x16*x18 + x18*x19 + x24 + x25*x26)/Omega0**2 + (1/8)*x10**((3/2)*x6 - 3/2)*(-8*x29 - 8*x34 + x38 - 6*x4*x51 + 24*x4*x53 + x40*x41 + 16*x44 - 12*x46 + x47*x49 - x49*x52)/Omega0**3 + (1/16)*1j*x10**(2*x6 - 2)*(-32*x29*x48 + 64*x34*x4 - 8*x38*x4 - 128*x4*x44 + 96*x4*x46 + x47*x78 - x47*x79 + 160*x48*x80 - x52*x78 + x52*x79 + 16*x56 + 80*x58 + x63 - 32*x65 - 288*x67 - 64*x70 + 128*x73 - 24*x74 + 112*x77)/Omega0**4 - 1/32*x10**((5/2)*x6 - 5/2)*(-x100*x103 + x100*x6*x64 - 40*x102 + 400*x105 - x106*x47 + x106*x52 + x107*x47 - x107*x52 - x108*x47 + x108*x52 - x17*x38*x40 - 80*x29*x51 + 320*x29*x53 + x35*x86 + 40*x38*x47 - 10*x4*x63 + 320*x4*x65 + 640*x4*x70 - 1280*x4*x73 + 240*x4*x74 - 1120*x4*x77 + 80*x48*x56 + 400*x48*x58 - 1440*x48*x67 + 400*x51*x80 - 1600*x53*x80 - 32*x83 + x86*x98 + x90 - 80*x92 + 1856*x94 - 1952*x96 - 1408*x99)/Omega0**5 - 1/64*1j*x10**(3*x6 - 3)*(x100*x115*x36*x4 + 11520*x101*x131*x22 + 480*x101*x139*x4 + 4800*x104*x141*x4 + 3904*x109*x19**3 + 64*x111 + x114*x8**6 + 3840*x116*x129 + 1040*x116*x134 + 2176*x116*x22 + 12*x117*x135*x88 + 60*x118*x130 + 160*x118*x61 + 11456*x119*x19 + 1024*x12*x123 + 3072*x12*x135*x97 + 30656*x120*x121 + 11712*x120*x13*x95 + 8704*x125*x126 + 18688*x125*x133 + 5760*x125*x36*x68 + 13312*x127*x128 + 1280*x127*x136 + 6400*x127*x151 + 11136*x13*x19*x93 + 192*x13*x83 + 3072*x131*x85 + 7936*x132*x23 + 11520*x135*x23*x68 + 160*x136*x141 + 1920*x136*x152 + x137*x142 + x137*x47 + x138*x140 + x138*x147 + x138*x149 + x138*x153 + x140*x143 + 800*x141*x151 + x142*x146 + x143*x147 + x143*x149 + x143*x153 + 4800*x144*x145 + 1200*x144*x24 + 17280*x145*x154 + 960*x145*x56 + x146*x47 + 12800*x148*x150 + 2560*x148*x29 + 9600*x151*x152 + 4320*x154*x24 + 16896*x21*x4*x7*x85 + 240*x24*x56)/Omega0**6 + (1/128)*x10**((7/2)*x6 - 7/2)*(448*x111*x48 - 128*x156 - 17408*x159 + x162 + 9856*x164 - 280*x167 + 69504*x168 + 177280*x170 - 398208*x171 + 4096*x173 - 116736*x175 + 121856*x177*x199 + 184320*x178 - 118272*x179 + 11200*x180 - 84*x181 - 64512*x182 + 301056*x184 + 77056*x185 - 114688*x186 - 22400*x187 + 2240*x188 - 30464*x189*x190 + 2240*x189*x191 - 14*x192*x4 + x194*x47 - x194*x52 - x195*x47 + x195*x52 + x196*x47 - x196*x52 - 27328*x197*x48 + 14336*x198*x4 + 840*x199*x89 - 53760*x199*x91 + 80640*x200*x37 - 186368*x200*x71 + x202*x47 - x202*x52 + x203*x70 - x204*x73 - 111104*x205*x4 - 14560*x206*x62 + 261632*x206*x64 - x207*x47 + x207*x52 + x208*x209 - x208*x211 - x209*x214 - x210*x47 + x210*x52 + x211*x214 + x212*x47 - x212*x52 - 80192*x213*x48 + 214592*x215*x48 - x216*x70 + x217*x73 - 280*x29*x63 + 8960*x29*x65 + 6720*x29*x74 - 31360*x29*x77 - 4480*x34*x56 - 22400*x34*x58 + 80640*x34*x67 + 560*x38*x56 + 2800*x38*x58 - 10080*x38*x67 + 8960*x44*x56 + 44800*x44*x58 - 161280*x44*x67 - 6720*x46*x56 - 33600*x46*x58 + 120960*x46*x67 - 672*x51*x83 + 38976*x51*x94 - 40992*x51*x96 + 2688*x53*x83 - 155904*x53*x94 + 163968*x53*x96 + 1400*x63*x80 - 44800*x65*x80 - 33600*x74*x80 + 156800*x77*x80)/Omega0**7 + (1/256)*1j*x10**(x25 - 4)*(x102*x203 - x102*x216 - 179200*x105*x29 + 896000*x105*x80 + x11**8*x219*x31**8 - 418816*x110*x218*x39 + 1792*x111*x51 - 7168*x111*x53 + 1015808*x126*x223 - 774144*x129*x220 + 26880*x130*x221 + 3883008*x133*x223 - 473088*x134*x220 - 1024*x156*x48 + 278528*x159*x4 - 4871168*x16*x169*x218 - 448*x160*x222 - 112*x161*x219*x6 - 16*x162*x4 - 157696*x164*x4 + 4256*x165*x222*x7 + 4480*x167*x4 + 556032*x168*x48 + 1418240*x170*x48 - 3185664*x171*x48 + 520192*x172*x219*x50 - 65536*x173*x4 + 1867776*x175*x4 - 3145728*x177*x225 - 2949120*x178*x4 + 1892352*x179*x4 - 179200*x180*x4 + 1344*x181*x4 + 1032192*x182*x4 - 4816896*x184*x4 - 1232896*x185*x4 + 1835008*x186*x4 + 358400*x187*x4 - 35840*x188*x4 - x193*x227 + x193*x247 - 109312*x197*x51 + 437248*x197*x53 - x201*x227 + x201*x247 + x204*x92 - x209*x240 + x209*x250 + x211*x240 - x211*x250 - 320768*x213*x51 + 1283072*x213*x53 + 858368*x215*x51 - 3433472*x215*x53 - x217*x92 + 256*x218*x3**8 + 354560*x218*x39**4 + 4677120*x218*x55*x57 - 16384*x219*x42*x6**7 - 253952*x22*x220 + 32256*x221*x61 - 989184*x224*x37 + 983040*x224*x71 - 67200*x225*x89 + 2752512*x225*x91 + 435456*x226*x62 - 4374528*x226*x64 + x228*x229 - x228*x232 - x229*x230 + x230*x232 + x231*x47 - x231*x52 - x233*x47 + x233*x52 - x234*x235 + x234*x238 - x234*x239 + x235*x242 + x236*x237 - x236*x248 - x237*x245 - x238*x242 + x239*x242 + x241*x47 - x241*x52 - x243*x244 + x243*x246 + x244*x249 + x245*x248 - x246*x249 - 448*x29*x90 + 630784*x29*x99 + 14336*x34*x83 - 831488*x34*x94 + 874496*x34*x96 - 1792*x38*x83 + 103936*x38*x94 - 109312*x38*x96 - 28672*x44*x83 + 1662976*x44*x94 - 1748992*x44*x96 + 21504*x46*x83 - 1247232*x46*x94 + 1311744*x46*x96 + 1120*x56*x63 - 35840*x56*x65 - 71680*x56*x70 + 143360*x56*x73 - 26880*x56*x74 + 125440*x56*x77 + 5600*x58*x63 - 179200*x58*x65 - 358400*x58*x70 + 716800*x58*x73 - 134400*x58*x74 + 627200*x58*x77 - 20160*x63*x67 + 645120*x65*x67 + 1290240*x67*x70 - 2580480*x67*x73 + 483840*x67*x74 - 2257920*x67*x77 + 2240*x80*x90 - 3153920*x80*x99)/Omega0**8)*np.exp(-1j*((1/2)*Omega_QNM*(Omega0*expi(x15*x251) - tau*expi(x251*(x6 + 1))) - Phi_0))*(1/((1/2)*np.exp(x2) + (1/2)*np.exp(-x2)))


@numba.jit(nopython=True, fastmath=True, cache=True)
def _waveform_n9(t, t0, tp, tau, Ap, Omega0, Omega_QNM, Phi_0):
    """Auto-generated, CSE-optimized, JIT-compiled waveform for n_max = 9."""
    x0 = 1/tau
    x1 = t - tp
    x2 = x0*x1
    x3 = np.tanh(x2)
    x4 = x0*x3
    x5 = 1/Omega_QNM
    x6 = np.tanh(x1*x5)
    x7 = x6**2
    x8 = x7 - 1
    x9 = 1/Omega0
    x10 = tau*x9
    x11 = np.log(x10)
    x12 = x11*x8
    x13 = x12*x5
    x14 = x10**((1/2)*x6 - 1/2)*x9
    x15 = x6 - 1
    x16 = x3**2
    x17 = tau**(-2)
    x18 = 4*x17
    x19 = x16 - 1
    x20 = Omega_QNM**(-2)
    x21 = x8**2
    x22 = x11**2
    x23 = x21*x22
    x24 = x20*x23
    x25 = 4*x6
    x26 = x12*x20
    x27 = tau**(-3)
    x28 = x3**3
    x29 = x27*x28
    x30 = Omega_QNM**(-3)
    x31 = -x8
    x32 = x31**2
    x33 = x30*x32
    x34 = x11*x33
    x35 = x31**3
    x36 = x11**3
    x37 = x35*x36
    x38 = x30*x37
    x39 = -x19
    x40 = 40*x39
    x41 = x27*x3
    x42 = x11*x31
    x43 = x30*x7
    x44 = x42*x43
    x45 = x22*x6
    x46 = x33*x45
    x47 = x16*x17
    x48 = x42*x5
    x49 = 12*x48
    x50 = x22*x32
    x51 = x20*x50
    x52 = x17*x39
    x53 = x20*x6
    x54 = x42*x53
    x55 = tau**(-4)
    x56 = x3**4
    x57 = x55*x56
    x58 = x39**2
    x59 = x55*x58
    x60 = Omega_QNM**(-4)
    x61 = x31**4
    x62 = x11**4
    x63 = x61*x62
    x64 = x60*x63
    x65 = x22*x35
    x66 = x60*x65
    x67 = x16*x55
    x68 = x39*x67
    x69 = x6**3
    x70 = x60*x69
    x71 = x42*x70
    x72 = x11*x32
    x73 = x6*x60
    x74 = x72*x73
    x75 = x37*x73
    x76 = x32*x7
    x77 = x22*x60
    x78 = x76*x77
    x79 = 24*x51
    x80 = 96*x54
    x81 = x39*x41
    x82 = tau**(-5)
    x83 = x3**5
    x84 = x82*x83
    x85 = Omega_QNM**(-5)
    x86 = x11*x85
    x87 = 256*x86
    x88 = x31**5
    x89 = x11**5
    x90 = x88*x89
    x91 = x85*x90
    x92 = x36*x61
    x93 = x85*x92
    x94 = x28*x82
    x95 = x39*x94
    x96 = x3*x82
    x97 = x58*x96
    x98 = x6**4
    x99 = x31*x98
    x100 = x76*x86
    x101 = 960*x85
    x102 = x6*x85
    x103 = x102*x63
    x104 = x22*x69
    x105 = x104*x32
    x106 = x7*x85
    x107 = x106*x37
    x108 = 320*x34
    x109 = x29*x42
    x110 = 640*x44
    x111 = 480*x46
    x112 = tau**(-6)
    x113 = x3**6
    x114 = x112*x113
    x115 = Omega_QNM**(-6)
    x116 = x11**6
    x117 = x115*x116
    x118 = x8**4
    x119 = x115*x118
    x120 = x8**5
    x121 = x115*x120
    x122 = x112*x56
    x123 = x19**2
    x124 = x112*x16
    x125 = x6**5
    x126 = x115*x125
    x127 = x8**3
    x128 = x115*x127
    x129 = x11*x6
    x130 = x11*x21
    x131 = x115*x69
    x132 = x36*x6
    x133 = x6*x89
    x134 = x127*x4
    x135 = x115*x98
    x136 = x4*x85
    x137 = x29*x30
    x138 = 1920*x127*x77
    x139 = x47*x60
    x140 = x118*x62
    x141 = 60*x140
    x142 = x127*x36
    x143 = x17*x19
    x144 = x143*x60
    x145 = x123*x55
    x146 = x26*x6
    x147 = 3840*x12*x70
    x148 = 7680*x129*x21
    x149 = x12*x43
    x150 = 1440*x127*x132
    x151 = x19*x41
    x152 = x151*x30
    x153 = x23*x6
    x154 = 6720*x23*x7
    x155 = x19*x67
    x156 = tau**(-7)
    x157 = x3**7
    x158 = x156*x157
    x159 = Omega_QNM**(-7)
    x160 = x159*x61
    x161 = x11*x160
    x162 = x31**7
    x163 = x11**7
    x164 = x162*x163
    x165 = x159*x164
    x166 = x36*x88
    x167 = x159*x166
    x168 = x31**6
    x169 = x159*x168
    x170 = x169*x89
    x171 = x156*x39*x83
    x172 = x39**3
    x173 = x156*x172*x3
    x174 = x156*x28*x58
    x175 = x6**6
    x176 = x159*x175
    x177 = x176*x42
    x178 = x159*x98
    x179 = x178*x72
    x180 = x159*x7
    x181 = x11*x35
    x182 = x180*x181
    x183 = x160*x45
    x184 = x6*x62
    x185 = x159*x184*x88
    x186 = x116*x6
    x187 = x169*x186
    x188 = x125*x159*x50
    x189 = x159*x69
    x190 = x189*x65
    x191 = x178*x37
    x192 = x180*x92
    x193 = x189*x63
    x194 = x180*x90
    x195 = x22*x61
    x196 = x115*x4
    x197 = x62*x88
    x198 = x117*x168
    x199 = x35*x86
    x200 = 21504*x199
    x201 = 6720*x93
    x202 = 84*x91
    x203 = x112*x172
    x204 = x126*x42
    x205 = x196*x6
    x206 = x131*x4
    x207 = x86*x99
    x208 = 21504*x207
    x209 = 17920*x29
    x210 = 35840*x29
    x211 = x135*x50
    x212 = x196*x7
    x213 = 118272*x100
    x214 = x102*x65
    x215 = 80640*x214
    x216 = 3360*x103
    x217 = x105*x85
    x218 = 80640*x217
    x219 = 33600*x107
    x220 = x122*x39
    x221 = x124*x58
    x222 = 89600*x81
    x223 = 179200*x81
    x224 = tau**(-8)
    x225 = x224*x3**8
    x226 = x39**4
    x227 = x224*x226
    x228 = Omega_QNM**(-8)
    x229 = x31**8
    x230 = x11**8*x229
    x231 = x228*x230
    x232 = x22*x88
    x233 = x228*x232
    x234 = x228*x62
    x235 = x168*x234
    x236 = x116*x228
    x237 = x162*x236
    x238 = x113*x224*x39
    x239 = x224*x56*x58
    x240 = x16*x172*x224
    x241 = x6**7
    x242 = x228*x241*x42
    x243 = x129*x228*x61
    x244 = x125*x228
    x245 = x244*x72
    x246 = x228*x69
    x247 = x181*x246
    x248 = x228*x6
    x249 = x166*x248
    x250 = x133*x168*x228
    x251 = x164*x248
    x252 = x175*x32
    x253 = x22*x228
    x254 = x252*x253
    x255 = x228*x98
    x256 = x255*x65
    x257 = x244*x37
    x258 = x61*x7
    x259 = x253*x258
    x260 = x246*x92
    x261 = x255*x63
    x262 = x234*x7*x88
    x263 = x246*x90
    x264 = x168*x236*x7
    x265 = 114688*x29
    x266 = 243712*x195
    x267 = x115*x47
    x268 = 17920*x197
    x269 = 112*x198
    x270 = x115*x52
    x271 = 65536*x31
    x272 = 114688*x204
    x273 = x267*x6
    x274 = 974848*x181
    x275 = 1490944*x72
    x276 = x131*x47
    x277 = 430080*x92
    x278 = 6720*x90
    x279 = 430080*x29
    x280 = 888832*x211
    x281 = x270*x6
    x282 = x267*x7
    x283 = 2093056*x65
    x284 = 645120*x37
    x285 = 116480*x63
    x286 = 573440*x81
    x287 = x131*x52
    x288 = x270*x7
    x289 = 2150400*x81
    x290 = tau**(-9)
    x291 = Omega_QNM**(-9)
    x292 = x11*x291
    x293 = x168*x291
    x294 = x162*x291
    x295 = x291*x6
    x296 = x125*x291
    x297 = x291*x98
    x298 = x291*x7
    x299 = 2506752*x161
    x300 = 516096*x57
    x301 = 1419264*x167
    x302 = 40320*x170
    x303 = 144*x165
    x304 = x115*x29
    x305 = 2580480*x59
    x306 = 589824*x177
    x307 = x304*x6
    x308 = 16809984*x179
    x309 = 26542080*x182
    x310 = 17031168*x183
    x311 = 1612800*x185
    x312 = 12096*x187
    x313 = x131*x29
    x314 = 1935360*x57
    x315 = 9289728*x188
    x316 = 43352064*x190
    x317 = 11096064*x191
    x318 = 16515072*x192
    x319 = 3225600*x193
    x320 = 322560*x194
    x321 = x304*x7
    x322 = x115*x81
    x323 = 9289728*x68
    x324 = 9676800*x59
    x325 = x322*x6
    x326 = x131*x81
    x327 = x322*x7
    x328 = 34836480*x68
    x329 = (1/2)*np.log(Omega0*x0)
    return -Ap*x14*((1/2)*x14*(x13 + 2*x4) + 1j - 1/4*1j*x10**x15*(4*x13*x4 + x16*x18 + x18*x19 + x24 + x25*x26)/Omega0**2 + (1/8)*x10**((3/2)*x6 - 3/2)*(-8*x29 - 8*x34 + x38 - 6*x4*x51 + 24*x4*x54 + x40*x41 + 16*x44 - 12*x46 + x47*x49 - x49*x52)/Omega0**3 + (1/16)*1j*x10**(2*x6 - 2)*(-32*x29*x48 + 64*x34*x4 - 8*x38*x4 - 128*x4*x44 + 96*x4*x46 + x47*x79 - x47*x80 + 160*x48*x81 - x52*x79 + x52*x80 + 16*x57 + 80*x59 + x64 - 32*x66 - 288*x68 - 64*x71 + 128*x74 - 24*x75 + 112*x78)/Omega0**4 - 1/32*x10**((5/2)*x6 - 5/2)*(-1408*x100 - x101*x105 + x101*x6*x65 - 40*x103 + 400*x107 - x108*x47 + x108*x52 + 320*x109*x53 + x110*x47 - x110*x52 - x111*x47 + x111*x52 - x17*x38*x40 - 80*x29*x51 + x35*x87 + 40*x38*x47 - 10*x4*x64 + 320*x4*x66 + 640*x4*x71 - 1280*x4*x74 + 240*x4*x75 - 1120*x4*x78 + 80*x48*x57 + 400*x48*x59 - 1440*x48*x68 + 400*x51*x81 - 1600*x54*x81 - 32*x84 + x87*x99 + x91 - 80*x93 + 1856*x95 - 1952*x97)/Omega0**5 - 1/64*1j*x10**(3*x6 - 3)*(x101*x118*x36*x4 + 11520*x102*x134*x22 + 480*x102*x140*x4 + 4800*x106*x142*x4 + 3904*x112*x19**3 + 64*x114 + x117*x8**6 + 3840*x119*x132 + 2176*x119*x22 + 1040*x119*x62*x7 + 1024*x12*x126 + 3072*x12*x136*x98 + 12*x120*x136*x89 + 60*x121*x133 + 160*x121*x62 + 11456*x122*x19 + 30656*x123*x124 + 11712*x123*x13*x96 + 8704*x128*x129 + 18688*x128*x22*x7 + 5760*x128*x36*x69 + 11136*x13*x19*x94 + 192*x13*x84 + 13312*x130*x131 + 1280*x130*x137 + 6400*x130*x152 + 3072*x134*x86 + 7936*x135*x23 + 11520*x136*x23*x69 + 160*x137*x142 + 1920*x137*x153 + x138*x143 + x138*x47 + x139*x141 + x139*x148 + x139*x150 + x139*x154 + x141*x144 + 800*x142*x152 + x143*x147 + x144*x148 + x144*x150 + x144*x154 + 4800*x145*x146 + 1200*x145*x24 + 17280*x146*x155 + 960*x146*x57 + x147*x47 + 12800*x149*x151 + 2560*x149*x29 + 9600*x152*x153 + 4320*x155*x24 + 16896*x21*x4*x7*x86 + 240*x24*x57)/Omega0**6 + (1/128)*x10**((7/2)*x6 - 7/2)*(448*x114*x48 - 128*x158 - 17408*x161 + x165 + 9856*x167 - 280*x170 + 69504*x171 + 177280*x173 - 398208*x174 + 4096*x177 - 116736*x179 + 121856*x181*x205 + 184320*x182 - 118272*x183 + 11200*x185 - 84*x187 - 64512*x188 + 301056*x190 + 77056*x191 - 114688*x192 - 22400*x193 + 2240*x194 - 30464*x195*x196 + 2240*x196*x197 - 14*x198*x4 + x200*x47 - x200*x52 - x201*x47 + x201*x52 + x202*x47 - x202*x52 - 27328*x203*x48 + 14336*x204*x4 + 840*x205*x90 - 53760*x205*x92 + 80640*x206*x37 - 186368*x206*x72 + x208*x47 - x208*x52 + x209*x71 - x210*x74 - 111104*x211*x4 - 14560*x212*x63 + 261632*x212*x65 - x213*x47 + x213*x52 + x215*x47 - x215*x52 - x216*x47 + x216*x52 - x218*x47 + x218*x52 + x219*x47 - x219*x52 - 80192*x220*x48 + 214592*x221*x48 - x222*x71 + x223*x74 - 280*x29*x64 + 8960*x29*x66 + 6720*x29*x75 - 31360*x29*x78 - 4480*x34*x57 - 22400*x34*x59 + 80640*x34*x68 + 560*x38*x57 + 2800*x38*x59 - 10080*x38*x68 + 8960*x44*x57 + 44800*x44*x59 - 161280*x44*x68 - 6720*x46*x57 - 33600*x46*x59 + 120960*x46*x68 - 672*x51*x84 + 38976*x51*x95 - 40992*x51*x97 + 2688*x54*x84 - 155904*x54*x95 + 163968*x54*x97 + 1400*x64*x81 - 44800*x66*x81 - 33600*x75*x81 + 156800*x78*x81)/Omega0**7 + (1/256)*1j*x10**(x25 - 4)*(630784*x100*x29 - 3153920*x100*x81 + x103*x209 - x103*x222 - 179200*x107*x29 + 896000*x107*x81 - x11*x176*x271*x4 + 1792*x114*x51 - 7168*x114*x54 - 1024*x158*x48 + 278528*x161*x4 - 16*x165*x4 - 157696*x167*x4 + 4480*x170*x4 + 556032*x171*x48 + 1418240*x173*x48 - 3185664*x174*x48 + 1867776*x179*x4 - 2949120*x182*x4 + 1892352*x183*x4 - 179200*x185*x4 + 1344*x187*x4 + 1032192*x188*x4 - 4816896*x190*x4 - 1232896*x191*x4 + 1835008*x192*x4 + 358400*x193*x4 - 35840*x194*x4 - x199*x265 + x199*x286 - 109312*x203*x51 + 437248*x203*x54 - x207*x265 + x207*x286 + x210*x93 - x214*x279 + x214*x289 + x217*x279 - x217*x289 - 320768*x220*x51 + 1283072*x220*x54 + 858368*x221*x51 - 3433472*x221*x54 - x223*x93 + 256*x225 + 354560*x227 + x231 - 253952*x233 + 32256*x235 - 448*x237 - 418816*x238 + 4677120*x239 - 4871168*x240 - 16384*x242 + 1015808*x243 + 983040*x245 - 3145728*x247 - 774144*x249 + 26880*x250 - 112*x251 + 520192*x254 - 4374528*x256 - 989184*x257 + 3883008*x259 + 2752512*x260 + 435456*x261 - 473088*x262 - 67200*x263 + 4256*x264 + x266*x267 - x266*x270 - x267*x268 + x268*x270 + x269*x47 - x269*x52 - x272*x47 + x272*x52 - x273*x274 + x273*x277 - x273*x278 + x274*x281 + x275*x276 - x275*x287 - x276*x284 - x277*x281 + x278*x281 + x280*x47 - x280*x52 - x282*x283 + x282*x285 + x283*x288 + x284*x287 - x285*x288 - 448*x29*x91 + 14336*x34*x84 - 831488*x34*x95 + 874496*x34*x97 - 1792*x38*x84 + 103936*x38*x95 - 109312*x38*x97 - 28672*x44*x84 + 1662976*x44*x95 - 1748992*x44*x97 + 21504*x46*x84 - 1247232*x46*x95 + 1311744*x46*x97 + 1120*x57*x64 - 35840*x57*x66 - 71680*x57*x71 + 143360*x57*x74 - 26880*x57*x75 + 125440*x57*x78 + 5600*x59*x64 - 179200*x59*x66 - 358400*x59*x71 + 716800*x59*x74 - 134400*x59*x75 + 627200*x59*x78 - 20160*x64*x68 + 645120*x66*x68 + 1290240*x68*x71 - 2580480*x68*x74 + 483840*x68*x75 - 2257920*x68*x78 + 2240*x81*x91)/Omega0**8 - 1/512*x10**((9/2)*x6 - 9/2)*(-2838528*x100*x57 - 14192640*x100*x59 + 51093504*x100*x68 - 80640*x103*x57 - 403200*x103*x59 + 1451520*x103*x68 - 100270080*x104*x291*x61 + 806400*x107*x57 + 4032000*x107*x59 - 14515200*x107*x68 + 688128*x109*x126 + x11**9*x291*x31**9 - 43008*x114*x34 + 5376*x114*x38 + 86016*x114*x44 - 64512*x114*x46 - 169344*x116*x293*x69 + 2516992*x157*x290*x39 - 4608*x158*x51 + 18432*x158*x54 - 672*x163*x229*x291 + 7392*x164*x298 + 35880960*x166*x298 + 2502144*x171*x51 - 10008576*x171*x54 + 105613312*x172*x28*x290 + 6382080*x173*x51 - 25528320*x173*x54 - 14335488*x174*x51 + 57341952*x174*x54 + 12390400*x175*x291*x37 + 5849088*x181*x307 - 29245440*x181*x325 - 3440640*x184*x293 + 56448*x186*x294 - 1462272*x195*x304 + 7311360*x195*x322 + 15697920*x197*x291*x69 + 107520*x197*x304 - 537600*x197*x322 - 672*x198*x29 + 3360*x198*x81 + x199*x300 + x199*x305 - x199*x323 + 2623488*x203*x34 - 327936*x203*x38 - 5246976*x203*x44 + 3935232*x203*x46 - 3440640*x204*x81 + x207*x300 + x207*x305 - x207*x323 - 5332992*x211*x29 + 26664960*x211*x81 + x214*x314 + x214*x324 - x214*x328 - x217*x314 - x217*x324 + x217*x328 + 7698432*x220*x34 - 962304*x220*x38 - 15396864*x220*x44 + 11547648*x220*x46 - 20600832*x221*x34 + 2575104*x221*x38 + 41201664*x221*x44 - 30901248*x221*x46 + 2304*x225*x48 - 25866752*x226*x290*x3 + 3191040*x227*x48 - 144*x230*x295 - 18*x231*x4 + 21626880*x232*x295 + 4571136*x233*x4 - 580608*x235*x4 + 8064*x237*x4 - 3769344*x238*x48 + 42094080*x239*x48 - 43840512*x240*x48 - 4177920*x241*x291*x50 + 294912*x242*x4 - 18284544*x243*x4 - 17694720*x245*x4 + 56623104*x247*x4 + 13934592*x249*x4 - 483840*x250*x4 + 2016*x251*x4 - 8093696*x252*x292 - 9363456*x254*x4 + 78741504*x256*x4 + 17805312*x257*x4 - 35127296*x258*x292 - 69894144*x259*x4 - 49545216*x260*x4 - 7838208*x261*x4 + 8515584*x262*x4 + 1209600*x263*x4 - 76608*x264*x4 + x271*x292*x6**8 - 512*x290*x3**9 - 51796992*x290*x58*x83 + 47579136*x292*x35*x98 + 2031616*x292*x88 - 1802240*x293*x36 - 1521408*x293*x7*x89 + 86016*x294*x89 - 7956480*x296*x63 + 59719680*x296*x65 + 1779456*x297*x90 - 58306560*x297*x92 - x299*x47 + x299*x52 + x301*x47 - x301*x52 - x302*x47 + x302*x52 + x303*x47 - x303*x52 + x306*x47 - x306*x52 + 40320*x307*x90 - 2580480*x307*x92 - x308*x47 + x308*x52 + x309*x47 - x309*x52 - x310*x47 + x310*x52 + x311*x47 - x311*x52 - x312*x47 + x312*x52 + 3870720*x313*x37 - 8945664*x313*x72 - x315*x47 + x315*x52 + x316*x47 - x316*x52 + x317*x47 - x317*x52 - x318*x47 + x318*x52 - x319*x47 + x319*x52 + x320*x47 - x320*x52 - 698880*x321*x63 + 12558336*x321*x65 - 201600*x325*x90 + 12902400*x325*x92 - 19353600*x326*x37 + 44728320*x326*x72 + 3494400*x327*x63 - 62791680*x327*x65 + 2016*x57*x91 - 161280*x57*x93 + 10080*x59*x91 - 806400*x59*x93 - 4032*x64*x84 + 233856*x64*x95 - 245952*x64*x97 + 129024*x66*x84 - 7483392*x66*x95 + 7870464*x66*x97 - 36288*x68*x91 + 2903040*x68*x93 + 258048*x71*x84 - 14966784*x71*x95 + 15740928*x71*x97 - 516096*x74*x84 + 29933568*x74*x95 - 31481856*x74*x97 + 96768*x75*x84 - 5612544*x75*x95 + 5902848*x75*x97 - 451584*x78*x84 + 26191872*x78*x95 - 27546624*x78*x97)/Omega0**9)*np.exp(-1j*((1/2)*Omega_QNM*(Omega0*expi(x15*x329) - tau*expi(x329*(x6 + 1))) - Phi_0))*(1/((1/2)*np.exp(x2) + (1/2)*np.exp(-x2)))


@numba.jit(nopython=True, fastmath=True, cache=True)
def _waveform_n10(t, t0, tp, tau, Ap, Omega0, Omega_QNM, Phi_0):
    """Auto-generated, CSE-optimized, JIT-compiled waveform for n_max = 10."""
    x0 = 1/tau
    x1 = t - tp
    x2 = x0*x1
    x3 = np.tanh(x2)
    x4 = x0*x3
    x5 = 1/Omega_QNM
    x6 = np.tanh(x1*x5)
    x7 = x6**2
    x8 = x7 - 1
    x9 = 1/Omega0
    x10 = tau*x9
    x11 = np.log(x10)
    x12 = x11*x8
    x13 = x12*x5
    x14 = x10**((1/2)*x6 - 1/2)*x9
    x15 = x6 - 1
    x16 = x3**2
    x17 = tau**(-2)
    x18 = 4*x17
    x19 = x16 - 1
    x20 = Omega_QNM**(-2)
    x21 = x8**2
    x22 = x11**2
    x23 = x21*x22
    x24 = x20*x23
    x25 = 4*x6
    x26 = x12*x20
    x27 = tau**(-3)
    x28 = x3**3
    x29 = x27*x28
    x30 = Omega_QNM**(-3)
    x31 = -x8
    x32 = x31**2
    x33 = x30*x32
    x34 = x11*x33
    x35 = x31**3
    x36 = x11**3
    x37 = x35*x36
    x38 = x30*x37
    x39 = -x19
    x40 = 40*x39
    x41 = x27*x3
    x42 = x11*x31
    x43 = x30*x7
    x44 = x42*x43
    x45 = x22*x6
    x46 = x33*x45
    x47 = x16*x17
    x48 = x42*x5
    x49 = 12*x48
    x50 = x22*x32
    x51 = x20*x50
    x52 = x17*x39
    x53 = x20*x6
    x54 = x42*x53
    x55 = tau**(-4)
    x56 = x3**4
    x57 = x55*x56
    x58 = x39**2
    x59 = x55*x58
    x60 = Omega_QNM**(-4)
    x61 = x31**4
    x62 = x11**4
    x63 = x61*x62
    x64 = x60*x63
    x65 = x22*x35
    x66 = x60*x65
    x67 = x16*x55
    x68 = x39*x67
    x69 = x6**3
    x70 = x60*x69
    x71 = x42*x70
    x72 = x11*x32
    x73 = x6*x60
    x74 = x72*x73
    x75 = x37*x73
    x76 = x32*x7
    x77 = x22*x60*x76
    x78 = 24*x51
    x79 = 96*x54
    x80 = x39*x41
    x81 = tau**(-5)
    x82 = x3**5
    x83 = x81*x82
    x84 = Omega_QNM**(-5)
    x85 = x11*x84
    x86 = 256*x85
    x87 = x31**5
    x88 = x11**5
    x89 = x87*x88
    x90 = x84*x89
    x91 = x36*x61
    x92 = x84*x91
    x93 = x28*x81
    x94 = x39*x93
    x95 = x3*x81
    x96 = x58*x95
    x97 = x6**4
    x98 = x31*x97
    x99 = x76*x85
    x100 = 960*x84
    x101 = x6*x84
    x102 = x101*x63
    x103 = x22*x69
    x104 = x103*x32
    x105 = x7*x84
    x106 = x105*x37
    x107 = 320*x34
    x108 = x29*x42
    x109 = 640*x44
    x110 = 480*x46
    x111 = tau**(-6)
    x112 = x3**6
    x113 = x111*x112
    x114 = x19**3
    x115 = x111*x114
    x116 = Omega_QNM**(-6)
    x117 = x8**6
    x118 = x11**6
    x119 = x117*x118
    x120 = x116*x119
    x121 = x8**4
    x122 = x116*x121
    x123 = x122*x22
    x124 = x8**5
    x125 = x116*x124
    x126 = x125*x62
    x127 = x111*x56
    x128 = x127*x19
    x129 = x19**2
    x130 = x111*x16
    x131 = x129*x130
    x132 = x6**5
    x133 = x116*x132
    x134 = x12*x133
    x135 = x8**3
    x136 = x116*x135
    x137 = x11*x6
    x138 = x136*x137
    x139 = x11*x21
    x140 = x116*x69
    x141 = x139*x140
    x142 = x36*x6
    x143 = x122*x142
    x144 = x6*x88
    x145 = x125*x144
    x146 = x135*x85
    x147 = 3072*x4
    x148 = x116*x97
    x149 = x148*x23
    x150 = x22*x7
    x151 = x136*x150
    x152 = x36*x69
    x153 = x136*x152
    x154 = x62*x7
    x155 = x122*x154
    x156 = x121*x36
    x157 = x156*x4
    x158 = x4*x88
    x159 = x124*x84
    x160 = x29*x30
    x161 = x47*x60
    x162 = x135*x22
    x163 = 1920*x162
    x164 = x121*x62
    x165 = 60*x164
    x166 = x135*x36
    x167 = x17*x19
    x168 = x167*x60
    x169 = x129*x55
    x170 = x12*x97
    x171 = x170*x84
    x172 = x26*x6
    x173 = x21*x7*x85
    x174 = x101*x4
    x175 = x12*x70
    x176 = 3840*x175
    x177 = x137*x21
    x178 = 7680*x177
    x179 = x12*x43
    x180 = x23*x69
    x181 = x180*x84
    x182 = x105*x166
    x183 = x135*x142
    x184 = 1440*x183
    x185 = x19*x41
    x186 = x139*x30
    x187 = x23*x6
    x188 = x19*x93
    x189 = x129*x95
    x190 = x23*x7
    x191 = 6720*x190
    x192 = x166*x30
    x193 = x19*x67
    x194 = x187*x30
    x195 = tau**(-7)
    x196 = x3**7
    x197 = x195*x196
    x198 = Omega_QNM**(-7)
    x199 = x198*x61
    x200 = x11*x199
    x201 = x31**7
    x202 = x11**7
    x203 = x201*x202
    x204 = x198*x203
    x205 = x36*x87
    x206 = x198*x205
    x207 = x31**6
    x208 = x198*x207
    x209 = x208*x88
    x210 = x195*x82
    x211 = x210*x39
    x212 = x39**3
    x213 = x195*x3
    x214 = x212*x213
    x215 = x195*x28
    x216 = x215*x58
    x217 = x6**6
    x218 = x198*x217
    x219 = x218*x42
    x220 = x198*x97
    x221 = x220*x72
    x222 = x198*x7
    x223 = x11*x35
    x224 = x222*x223
    x225 = x199*x45
    x226 = x6*x62
    x227 = x198*x226
    x228 = x227*x87
    x229 = x118*x6
    x230 = x208*x229
    x231 = x132*x198
    x232 = x231*x50
    x233 = x198*x69
    x234 = x233*x65
    x235 = x220*x37
    x236 = x222*x91
    x237 = x233*x63
    x238 = x222*x89
    x239 = x22*x61
    x240 = x116*x4
    x241 = x62*x87
    x242 = x118*x207
    x243 = x35*x85
    x244 = 21504*x243
    x245 = 6720*x92
    x246 = 84*x90
    x247 = x111*x212
    x248 = x133*x42
    x249 = x240*x6
    x250 = x140*x4
    x251 = x85*x98
    x252 = 21504*x251
    x253 = 17920*x29
    x254 = 35840*x29
    x255 = x148*x50
    x256 = x240*x7
    x257 = 118272*x99
    x258 = 80640*x47
    x259 = x101*x65
    x260 = 3360*x102
    x261 = x104*x84
    x262 = 33600*x106
    x263 = x127*x39
    x264 = 80640*x52
    x265 = x130*x58
    x266 = 89600*x80
    x267 = 179200*x80
    x268 = tau**(-8)
    x269 = x3**8
    x270 = x268*x269
    x271 = x39**4
    x272 = x268*x271
    x273 = Omega_QNM**(-8)
    x274 = x31**8
    x275 = x11**8
    x276 = x274*x275
    x277 = x273*x276
    x278 = x22*x87
    x279 = x273*x278
    x280 = x273*x62
    x281 = x207*x280
    x282 = x118*x273
    x283 = x201*x282
    x284 = x112*x268
    x285 = x284*x39
    x286 = x268*x56
    x287 = x286*x58
    x288 = x16*x268
    x289 = x212*x288
    x290 = x6**7
    x291 = x273*x290
    x292 = x291*x42
    x293 = x137*x273
    x294 = x293*x61
    x295 = x132*x273
    x296 = x295*x72
    x297 = x273*x69
    x298 = x223*x297
    x299 = x273*x6
    x300 = x205*x299
    x301 = x144*x273
    x302 = x207*x301
    x303 = x203*x299
    x304 = x217*x32
    x305 = x22*x273
    x306 = x304*x305
    x307 = x273*x97
    x308 = x307*x65
    x309 = x295*x37
    x310 = x61*x7
    x311 = x305*x310
    x312 = x297*x91
    x313 = x307*x63
    x314 = x280*x7
    x315 = x314*x87
    x316 = x297*x89
    x317 = x207*x282*x7
    x318 = 114688*x29
    x319 = 243712*x239
    x320 = x116*x47
    x321 = 17920*x241
    x322 = 112*x242
    x323 = x116*x52
    x324 = 65536*x31
    x325 = 114688*x248
    x326 = x320*x6
    x327 = 974848*x223
    x328 = 1490944*x72
    x329 = x140*x47
    x330 = 430080*x91
    x331 = 6720*x89
    x332 = 430080*x29
    x333 = 888832*x255
    x334 = x323*x6
    x335 = x320*x7
    x336 = 2093056*x65
    x337 = 645120*x37
    x338 = 116480*x63
    x339 = 573440*x80
    x340 = x140*x52
    x341 = x323*x7
    x342 = 2150400*x80
    x343 = tau**(-9)
    x344 = x3**9*x343
    x345 = Omega_QNM**(-9)
    x346 = x11*x345
    x347 = x11**9
    x348 = x345*x347
    x349 = x207*x345
    x350 = x201*x345
    x351 = x202*x345
    x352 = x196*x343
    x353 = x3*x343
    x354 = x343*x82
    x355 = x28*x343
    x356 = x6**8
    x357 = x346*x97
    x358 = x345*x6
    x359 = x290*x345
    x360 = x132*x345
    x361 = x217*x345
    x362 = x103*x345
    x363 = x345*x97
    x364 = x345*x7
    x365 = x345*x69
    x366 = x7*x88
    x367 = 2506752*x200
    x368 = 516096*x57
    x369 = 1419264*x206
    x370 = 40320*x209
    x371 = 144*x204
    x372 = x116*x29
    x373 = 2580480*x59
    x374 = 589824*x219
    x375 = x372*x6
    x376 = 16809984*x221
    x377 = 26542080*x224
    x378 = 17031168*x225
    x379 = 1612800*x228
    x380 = 12096*x230
    x381 = x140*x29
    x382 = 1935360*x57
    x383 = 9289728*x232
    x384 = 43352064*x234
    x385 = 11096064*x235
    x386 = 16515072*x236
    x387 = 3225600*x237
    x388 = 322560*x238
    x389 = x372*x7
    x390 = x116*x80
    x391 = 9289728*x68
    x392 = 9676800*x59
    x393 = x390*x6
    x394 = x140*x80
    x395 = x390*x7
    x396 = 34836480*x68
    x397 = tau**(-10)
    x398 = Omega_QNM**(-10)
    x399 = x117*x398
    x400 = x8**7
    x401 = x398*x400
    x402 = x8**8
    x403 = x398*x402
    x404 = x8**9
    x405 = x398*x404
    x406 = x19**4
    x407 = x124*x398
    x408 = x290*x398
    x409 = x11*x398
    x410 = x202*x6
    x411 = x346*x4
    x412 = x217*x398
    x413 = x398*x97
    x414 = x124*x62
    x415 = x69*x88
    x416 = x345*x4
    x417 = x117*x416
    x418 = x351*x4
    x419 = x198*x29
    x420 = x11*x121
    x421 = x197*x30
    x422 = x124*x47
    x423 = 45711360*x305
    x424 = x117*x47
    x425 = 5806080*x280
    x426 = x282*x400
    x427 = x273*x47
    x428 = x275*x402
    x429 = 180*x428
    x430 = x124*x419
    x431 = x117*x88
    x432 = x202*x400
    x433 = x83*x84
    x434 = x159*x88
    x435 = x113*x60
    x436 = x124*x167
    x437 = x117*x167
    x438 = x167*x273
    x439 = x115*x60
    x440 = x268*x406
    x441 = x358*x4
    x442 = 2949120*x12*x291
    x443 = x121*x47
    x444 = 182845440*x293
    x445 = x12*x218
    x446 = x360*x4
    x447 = x124*x36
    x448 = x365*x4
    x449 = x295*x47
    x450 = 176947200*x139
    x451 = x11*x135
    x452 = 566231040*x297*x451
    x453 = x121*x167
    x454 = x124*x427
    x455 = 139345920*x142
    x456 = 4838400*x301
    x457 = 20160*x400*x410
    x458 = x220*x29
    x459 = x222*x29
    x460 = x185*x198
    x461 = x121*x45
    x462 = 10752000*x124
    x463 = x119*x6
    x464 = x101*x83
    x465 = x167*x295
    x466 = 93634560*x217*x23
    x467 = 787415040*x162*x307
    x468 = 178053120*x166
    x469 = x121*x427
    x470 = 698941440*x150
    x471 = 495452160*x152
    x472 = 78382080*x280*x97
    x473 = x124*x438
    x474 = 85155840*x314
    x475 = 12096000*x415
    x476 = 766080*x119*x7
    x477 = x23*x231
    x478 = x103*x135
    x479 = x164*x233
    x480 = 119734272*x188
    x481 = 125927424*x189
    x482 = x19*x210
    x483 = x114*x213
    x484 = x121*x438
    x485 = x156*x84
    x486 = x162*x60
    x487 = x164*x60
    x488 = x129*x215
    x489 = x19*x284
    x490 = x129*x286
    x491 = x114*x288
    x492 = x185*x220
    x493 = x185*x222
    x494 = x128*x60
    x495 = 449003520*x188
    x496 = x101*x162
    x497 = 472227840*x189
    x498 = x101*x164
    x499 = x131*x60
    x500 = x183*x60
    x501 = (1/2)*np.log(Omega0*x0)
    return -Ap*x14*((1/2)*x14*(x13 + 2*x4) + 1j - 1/4*1j*x10**x15*(4*x13*x4 + x16*x18 + x18*x19 + x24 + x25*x26)/Omega0**2 + (1/8)*x10**((3/2)*x6 - 3/2)*(-8*x29 - 8*x34 + x38 - 6*x4*x51 + 24*x4*x54 + x40*x41 + 16*x44 - 12*x46 + x47*x49 - x49*x52)/Omega0**3 + (1/16)*1j*x10**(2*x6 - 2)*(-32*x29*x48 + 64*x34*x4 - 8*x38*x4 - 128*x4*x44 + 96*x4*x46 + x47*x78 - x47*x79 + 160*x48*x80 - x52*x78 + x52*x79 + 16*x57 + 80*x59 + x64 - 32*x66 - 288*x68 - 64*x71 + 128*x74 - 24*x75 + 112*x77)/Omega0**4 - 1/32*x10**((5/2)*x6 - 5/2)*(-x100*x104 + x100*x6*x65 - 40*x102 + 400*x106 - x107*x47 + x107*x52 + 320*x108*x53 + x109*x47 - x109*x52 - x110*x47 + x110*x52 - x17*x38*x40 - 80*x29*x51 + x35*x86 + 40*x38*x47 - 10*x4*x64 + 320*x4*x66 + 640*x4*x71 - 1280*x4*x74 + 240*x4*x75 - 1120*x4*x77 + 80*x48*x57 + 400*x48*x59 - 1440*x48*x68 + 400*x51*x80 - 1600*x54*x80 - 32*x83 + x86*x98 + x90 - 80*x92 + 1856*x94 - 1952*x96 - 1408*x99)/Omega0**5 - 1/64*1j*x10**(3*x6 - 3)*(x100*x157 + 64*x113 + 3904*x115 + x120 + 2176*x123 + 160*x126 + 11456*x128 + 11136*x13*x188 + 11712*x13*x189 + 192*x13*x83 + 30656*x131 + 1024*x134 + 8704*x138 + 1280*x139*x160 + 13312*x141 + 3840*x143 + 60*x145 + x146*x147 + x147*x171 + 7936*x149 + 18688*x151 + 5760*x153 + 1040*x155 + 12*x158*x159 + 160*x160*x166 + 1920*x160*x187 + x161*x163 + x161*x165 + x161*x178 + x161*x184 + x161*x191 + 11520*x162*x174 + x163*x168 + 480*x164*x174 + x165*x168 + x167*x176 + x168*x178 + x168*x184 + x168*x191 + 4800*x169*x172 + 1200*x169*x24 + 17280*x172*x193 + 960*x172*x57 + 16896*x173*x4 + x176*x47 + 12800*x179*x185 + 2560*x179*x29 + 11520*x181*x4 + 4800*x182*x4 + 6400*x185*x186 + 800*x185*x192 + 9600*x185*x194 + 4320*x193*x24 + 240*x24*x57)/Omega0**6 + (1/128)*x10**((7/2)*x6 - 7/2)*(448*x113*x48 - 128*x197 - 17408*x200 + x204 + 9856*x206 - 280*x209 + 69504*x211 + 177280*x214 - 398208*x216 + 4096*x219 - 116736*x221 + 121856*x223*x249 + 184320*x224 - 118272*x225 + 11200*x228 - 84*x230 - 64512*x232 + 301056*x234 + 77056*x235 - 114688*x236 - 22400*x237 + 2240*x238 - 30464*x239*x240 + 2240*x240*x241 - 14*x240*x242 + x244*x47 - x244*x52 - x245*x47 + x245*x52 + x246*x47 - x246*x52 - 27328*x247*x48 + 14336*x248*x4 + 840*x249*x89 - 53760*x249*x91 + 80640*x250*x37 - 186368*x250*x72 + x252*x47 - x252*x52 + x253*x71 - x254*x74 - 111104*x255*x4 - 14560*x256*x63 + 261632*x256*x65 - x257*x47 + x257*x52 + x258*x259 - x258*x261 - x259*x264 - x260*x47 + x260*x52 + x261*x264 + x262*x47 - x262*x52 - 80192*x263*x48 + 214592*x265*x48 - x266*x71 + x267*x74 - 280*x29*x64 + 8960*x29*x66 + 6720*x29*x75 - 31360*x29*x77 - 4480*x34*x57 - 22400*x34*x59 + 80640*x34*x68 + 560*x38*x57 + 2800*x38*x59 - 10080*x38*x68 + 8960*x44*x57 + 44800*x44*x59 - 161280*x44*x68 - 6720*x46*x57 - 33600*x46*x59 + 120960*x46*x68 - 672*x51*x83 + 38976*x51*x94 - 40992*x51*x96 + 2688*x54*x83 - 155904*x54*x94 + 163968*x54*x96 + 1400*x64*x80 - 44800*x66*x80 - 33600*x75*x80 + 156800*x77*x80)/Omega0**7 + (1/256)*1j*x10**(x25 - 4)*(x102*x253 - x102*x266 - 179200*x106*x29 + 896000*x106*x80 - x11*x218*x324*x4 + 1792*x113*x51 - 7168*x113*x54 - 1024*x197*x48 + 278528*x200*x4 - 16*x204*x4 - 157696*x206*x4 + 4480*x209*x4 + 556032*x211*x48 + 1418240*x214*x48 - 3185664*x216*x48 + 1867776*x221*x4 - 2949120*x224*x4 + 1892352*x225*x4 - 179200*x228*x4 + 1344*x230*x4 + 1032192*x232*x4 - 4816896*x234*x4 - 1232896*x235*x4 + 1835008*x236*x4 + 358400*x237*x4 - 35840*x238*x4 - x243*x318 + x243*x339 - 109312*x247*x51 + 437248*x247*x54 - x251*x318 + x251*x339 + x254*x92 - x259*x332 + x259*x342 + x261*x332 - x261*x342 - 320768*x263*x51 + 1283072*x263*x54 + 858368*x265*x51 - 3433472*x265*x54 - x267*x92 + 256*x270 + 354560*x272 + x277 - 253952*x279 + 32256*x281 - 448*x283 - 418816*x285 + 4677120*x287 - 4871168*x289 - 448*x29*x90 + 630784*x29*x99 - 16384*x292 + 1015808*x294 + 983040*x296 - 3145728*x298 - 774144*x300 + 26880*x302 - 112*x303 + 520192*x306 - 4374528*x308 - 989184*x309 + 3883008*x311 + 2752512*x312 + 435456*x313 - 473088*x315 - 67200*x316 + 4256*x317 + x319*x320 - x319*x323 - x320*x321 + x320*x322 + x321*x323 - x322*x323 - x325*x47 + x325*x52 - x326*x327 + x326*x330 - x326*x331 + x327*x334 + x328*x329 - x328*x340 - x329*x337 - x330*x334 + x331*x334 + x333*x47 - x333*x52 - x335*x336 + x335*x338 + x336*x341 + x337*x340 - x338*x341 + 14336*x34*x83 - 831488*x34*x94 + 874496*x34*x96 - 1792*x38*x83 + 103936*x38*x94 - 109312*x38*x96 - 28672*x44*x83 + 1662976*x44*x94 - 1748992*x44*x96 + 21504*x46*x83 - 1247232*x46*x94 + 1311744*x46*x96 + 1120*x57*x64 - 35840*x57*x66 - 71680*x57*x71 + 143360*x57*x74 - 26880*x57*x75 + 125440*x57*x77 + 5600*x59*x64 - 179200*x59*x66 - 358400*x59*x71 + 716800*x59*x74 - 134400*x59*x75 + 627200*x59*x77 - 20160*x64*x68 + 645120*x66*x68 + 1290240*x68*x71 - 2580480*x68*x74 + 483840*x68*x75 - 2257920*x68*x77 + 2240*x80*x90 - 3153920*x80*x99)/Omega0**8 - 1/512*x10**((9/2)*x6 - 9/2)*(-80640*x102*x57 - 403200*x102*x59 + 1451520*x102*x68 + 806400*x106*x57 + 4032000*x106*x59 - 14515200*x106*x68 + 688128*x108*x133 - 43008*x113*x34 + 5376*x113*x38 + 86016*x113*x44 - 64512*x113*x46 - 169344*x118*x349*x69 - 4608*x197*x51 + 18432*x197*x54 + 7392*x203*x364 + 35880960*x205*x364 + 2502144*x211*x51 - 10008576*x211*x54 + 105613312*x212*x355 + 6382080*x214*x51 - 25528320*x214*x54 - 14335488*x216*x51 + 57341952*x216*x54 + 5849088*x223*x375 - 29245440*x223*x393 - 3440640*x226*x349 + 56448*x229*x350 - 1462272*x239*x372 + 7311360*x239*x390 + 15697920*x241*x365 + 107520*x241*x372 - 537600*x241*x390 - 672*x242*x372 + 3360*x242*x390 + x243*x368 + x243*x373 - x243*x391 + 2623488*x247*x34 - 327936*x247*x38 - 5246976*x247*x44 + 3935232*x247*x46 - 3440640*x248*x80 + x251*x368 + x251*x373 - x251*x391 - 5332992*x255*x29 + 26664960*x255*x80 + x259*x382 + x259*x392 - x259*x396 - x261*x382 - x261*x392 + x261*x396 + 7698432*x263*x34 - 962304*x263*x38 - 15396864*x263*x44 + 11547648*x263*x46 - 20600832*x265*x34 + 2575104*x265*x38 + 41201664*x265*x44 - 30901248*x265*x46 + 2304*x270*x48 - 25866752*x271*x353 + 3191040*x272*x48 - 672*x274*x351 - 144*x276*x358 - 18*x277*x4 + 21626880*x278*x358 + 4571136*x279*x4 - 580608*x281*x4 + 8064*x283*x4 - 3769344*x285*x48 + 42094080*x287*x48 - 43840512*x289*x48 + 294912*x292*x4 - 18284544*x294*x4 - 17694720*x296*x4 + 56623104*x298*x4 + 13934592*x300*x4 - 483840*x302*x4 + 2016*x303*x4 - 8093696*x304*x346 - 9363456*x306*x4 + 78741504*x308*x4 + 17805312*x309*x4 + x31**9*x348 - 35127296*x310*x346 - 69894144*x311*x4 - 49545216*x312*x4 - 7838208*x313*x4 + 8515584*x315*x4 + 1209600*x316*x4 - 76608*x317*x4 + x324*x346*x356 - 512*x344 + 2031616*x346*x87 - 1802240*x349*x36 - 1521408*x349*x366 + 47579136*x35*x357 + 86016*x350*x88 + 2516992*x352*x39 - 51796992*x354*x58 - 4177920*x359*x50 - 7956480*x360*x63 + 59719680*x360*x65 + 12390400*x361*x37 - 100270080*x362*x61 + 1779456*x363*x89 - 58306560*x363*x91 - x367*x47 + x367*x52 + x369*x47 - x369*x52 + 3870720*x37*x381 - 19353600*x37*x394 - x370*x47 + x370*x52 + x371*x47 - x371*x52 + x374*x47 - x374*x52 + 40320*x375*x89 - 2580480*x375*x91 - x376*x47 + x376*x52 + x377*x47 - x377*x52 - x378*x47 + x378*x52 + x379*x47 - x379*x52 - x380*x47 + x380*x52 - 8945664*x381*x72 - x383*x47 + x383*x52 + x384*x47 - x384*x52 + x385*x47 - x385*x52 - x386*x47 + x386*x52 - x387*x47 + x387*x52 + x388*x47 - x388*x52 - 698880*x389*x63 + 12558336*x389*x65 - 201600*x393*x89 + 12902400*x393*x91 + 44728320*x394*x72 + 3494400*x395*x63 - 62791680*x395*x65 + 2016*x57*x90 - 161280*x57*x92 - 2838528*x57*x99 + 10080*x59*x90 - 806400*x59*x92 - 14192640*x59*x99 - 4032*x64*x83 + 233856*x64*x94 - 245952*x64*x96 + 129024*x66*x83 - 7483392*x66*x94 + 7870464*x66*x96 - 36288*x68*x90 + 2903040*x68*x92 + 51093504*x68*x99 + 258048*x71*x83 - 14966784*x71*x94 + 15740928*x71*x96 - 516096*x74*x83 + 29933568*x74*x94 - 31481856*x74*x96 + 96768*x75*x83 - 5612544*x75*x94 + 5902848*x75*x96 - 451584*x77*x83 + 26191872*x77*x94 - 27546624*x77*x96)/Omega0**9 - 1/1024*1j*x10**(5*x6 - 5)*(x11**10*x398*x8**10 + 553207808*x112*x129*x397 + 860160*x113*x175 + 1056133120*x114*x13*x355 + 1996556288*x114*x397*x56 + 52469760*x115*x175 + 1128960*x118*x400*x441 + 4118016*x118*x401*x7 + 198912*x118*x403 + 5843712*x119*x413 + 3386880*x119*x448 + 1310720*x12*x356*x416 + 262144*x12*x398*x6**9 + 16800*x120*x169 + 60480*x120*x193 + 3360*x120*x57 + 2249097216*x121*x22*x413 + 2005401600*x121*x362*x4 + 942669824*x121*x409*x69 + 702545920*x121*x411*x7 + 36556800*x123*x169 + 131604480*x123*x193 + 7311360*x123*x57 + 35589120*x124*x158*x363 + 53760000*x124*x185*x227 + 432537600*x124*x22*x441 + 40632320*x124*x411 + 2688000*x126*x169 + 9676800*x126*x193 + 537600*x126*x57 + 153968640*x128*x175 + 76984320*x128*x486 + 2405760*x128*x487 + 57738240*x128*x500 + 517969920*x129*x13*x354 + 25169920*x13*x19*x352 + 5120*x13*x344 + 258667520*x13*x353*x406 + 412016640*x131*x175 + 206008320*x131*x486 + 6437760*x131*x487 + 154506240*x131*x500 + 668073984*x132*x135*x409 + 1141309440*x132*x156*x398 + 43545600*x132*x407*x88 + 17203200*x134*x169 + 61931520*x134*x193 + 3440640*x134*x57 + 951582720*x135*x357*x4 + 181141504*x137*x407 + 146227200*x138*x169 + 526417920*x138*x193 + 29245440*x138*x57 + 65798144*x139*x408 + 122880*x139*x421 + 112066560*x139*x458 + 560332800*x139*x492 + 223641600*x141*x169 + 805109760*x141*x193 + 44728320*x141*x57 + 208404480*x142*x399 + 64512000*x143*x169 + 232243200*x143*x193 + 12902400*x143*x57 + 11934720*x144*x401 + 1008000*x145*x169 + 3628800*x145*x193 + 201600*x145*x57 + x146*x480 + x146*x481 + 2064384*x146*x83 + 133324800*x149*x169 + 479969280*x149*x193 + 26664960*x149*x57 + 1069285376*x150*x407 + 313958400*x151*x169 + 1130250240*x151*x193 + 62791680*x151*x57 + 1284341760*x152*x407 + 96768000*x153*x169 + 348364800*x153*x193 + 19353600*x153*x57 + 212643840*x154*x399 + 17472000*x155*x169 + 62899200*x155*x193 + 3494400*x155*x57 + 645120*x156*x433 + 110100480*x156*x459 + 550502400*x156*x493 + 1166131200*x157*x363 + 1720320*x158*x345*x400 + 1099281408*x16*x397*x406 + 783220736*x162*x412 + 430080*x162*x435 + 26234880*x162*x439 + 1194393600*x162*x446 + 7741440*x162*x464 + 139694080*x164*x412 + 13440*x164*x435 + 819840*x164*x439 + 159129600*x164*x446 + 322560*x164*x464 + 247808000*x166*x361*x4 + 152862720*x166*x408 + 15360*x166*x421 + 73973760*x166*x458 + 369868800*x166*x492 + 80640*x167*x426 + x167*x442 + x167*x452 + x167*x467 + 2064384*x170*x433 + x171*x480 + x171*x481 + 46080*x172*x270 + 63820800*x172*x440 + 75386880*x172*x489 + 841881600*x172*x490 + 876810240*x172*x491 + 658538496*x173*x188 + 692600832*x173*x189 + 11354112*x173*x83 + 1720320*x177*x435 + 104939520*x177*x439 + 307937280*x177*x494 + 824033280*x177*x499 + 245760*x179*x197 + 133447680*x179*x482 + 340377600*x179*x483 + 764559360*x179*x488 + 7741440*x180*x433 + x181*x495 + x181*x497 + 187084800*x182*x188 + 196761600*x182*x189 + 3225600*x182*x83 + 322560*x183*x435 + 19676160*x183*x439 + 19660800*x185*x445 + 309657600*x185*x477 + 107520000*x185*x479 + 66723840*x186*x482 + 170188800*x186*x483 + 382279680*x186*x488 + 184320*x187*x421 + 467712*x188*x434 + 37416960*x188*x485 + 18708480*x188*x498 + 491904*x189*x434 + 39352320*x189*x485 + 19676160*x189*x498 + 51733504*x19**5*x397 + 15111168*x19*x269*x397 + 1505280*x190*x435 + 91822080*x190*x439 + 269445120*x190*x494 + 721029120*x190*x499 + 8340480*x192*x482 + 21273600*x192*x483 + 47784960*x192*x488 + 100085760*x194*x482 + 255283200*x194*x483 + 573419520*x194*x488 + 376320*x202*x401*x69 + 161873920*x21*x217*x411 + 45285376*x22*x399 + 68812800*x226*x417 + x227*x29*x462 + 33488896*x23*x356*x398 + 83558400*x23*x359*x4 + 11520*x24*x270 + 15955200*x24*x440 + 18846720*x24*x489 + 210470400*x24*x490 + 219202560*x24*x491 + x258*x426 + 12000*x275*x403*x7 + 960*x275*x405 + 3932160*x29*x445 + 61931520*x29*x477 + 21504000*x29*x479 + 1024*x3**10*x397 + 180*x347*x405*x6 + 20*x348*x4*x404 + 36044800*x36*x417 + 9461760*x36*x430 + 717619200*x364*x4*x447 + 30428160*x366*x417 + 2150400*x366*x430 + x366*x460*x462 + 66447360*x399*x415 + 147840*x400*x418*x7 + 8683520*x401*x62 + 13440*x402*x418 + 107520*x403*x410 + 451829760*x413*x414 + 313958400*x414*x448 + 16711680*x419*x420 + 268800*x419*x431 + 960*x419*x432 + 113541120*x419*x461 + 80640*x419*x463 + 289013760*x419*x478 + 83558400*x420*x460 + x422*x423 + x422*x474 + x423*x436 + x424*x425 + x424*x456 + x425*x437 + x427*x429 + x427*x457 + x427*x466 + x427*x476 + 2880*x428*x441 + x429*x438 + 1344000*x431*x460 + 4800*x432*x460 + 8064*x434*x83 + x436*x474 + x437*x456 + x438*x457 + x438*x466 + x438*x476 + x442*x47 + x443*x444 + x443*x472 + x444*x453 + 47308800*x447*x460 + x449*x450 + x449*x468 + x450*x465 + 176947200*x451*x459 + 884736000*x451*x493 + x452*x47 + x453*x472 + x454*x455 + x454*x475 + x455*x473 + 567705600*x460*x461 + 403200*x460*x463 + 1445068800*x460*x478 + x465*x468 + x467*x47 + x469*x470 + x469*x471 + x470*x484 + x471*x484 + x473*x475 + x495*x496 + x496*x497)/Omega0**10)*np.exp(-1j*((1/2)*Omega_QNM*(Omega0*expi(x15*x501) - tau*expi(x501*(x6 + 1))) - Phi_0))*(1/((1/2)*np.exp(x2) + (1/2)*np.exp(-x2)))


# -------------------------------------------------------------------------
# Dispatcher to select the correct function at runtime
# -------------------------------------------------------------------------
_function_map = {
    0: _waveform_n0,
    1: _waveform_n1,
    2: _waveform_n2,
    3: _waveform_n3,
    4: _waveform_n4,
    5: _waveform_n5,
    6: _waveform_n6,
    7: _waveform_n7,
    8: _waveform_n8,
    9: _waveform_n9,
    10: _waveform_n10,
}

def get_precomputed_waveform(n_max, t, t0, tp, tau, Ap, Omega0, Omega_QNM, Phi_0):
    """
    Selects and evaluates the pre-computed waveform for a specific n_max.

    This is the main function to be called from other scripts. It dispatches
    to a pre-compiled, optimized function based on the n_max chosen.

    NOTE: The 't0' parameter is ignored by 'asymptotic' models but must still be
    provided for a consistent function signature.

    Args:
        n_max (int): The desired order of the expansion.
        ... (other parameters for the waveform)

    Returns:
        numpy.ndarray: The complex waveform values.
    """
    if n_max not in _function_map:
        raise ValueError(f"Invalid n_max: {n_max}. Available values are: {list(_function_map.keys())}")

    selected_func = _function_map[n_max]
    return selected_func(t, t0, tp, tau, Ap, Omega0, Omega_QNM, Phi_0)
